//////////////////////////////////////////////////////////
// GENERATED BY FLUTTIFY. DO NOT EDIT IT.
//////////////////////////////////////////////////////////

import 'dart:typed_data';

import 'package:xftts_fluttify/src/ios/ios.export.g.dart';
import 'package:xftts_fluttify/src/android/android.export.g.dart';
import 'package:flutter/foundation.dart';
import 'package:flutter/services.dart';

// ignore_for_file: non_constant_identifier_names, camel_case_types, missing_return, unused_import
class IFlySetting extends NSObject  {
  // generate getters
  

  // generate setters
  

  // generate methods
  static Future<String> getVersion() async {
    // print log
    if (fluttifyLogEnabled) {
      print('fluttify-dart: IFlySetting::getVersion([])');
    }
  
    // invoke native method
    final result = await MethodChannel('com.fluttify/xftts_fluttify').invokeMethod('IFlySetting::getVersion', );
  
  
    // handle native call
  
  
    // convert native result to dart side object
    if (result == null) {
      return null;
    } else {
    
      return result;
    }
  }
  
  static Future<LOG_LEVEL> logLvl() async {
    // print log
    if (fluttifyLogEnabled) {
      print('fluttify-dart: IFlySetting::logLvl([])');
    }
  
    // invoke native method
    final result = await MethodChannel('com.fluttify/xftts_fluttify').invokeMethod('IFlySetting::logLvl', );
  
  
    // handle native call
  
  
    // convert native result to dart side object
    if (result == null) {
      return null;
    } else {
    
      return LOG_LEVEL.values[result];
    }
  }
  
  static Future<void> showLogcat(bool showLog) async {
    // print log
    if (fluttifyLogEnabled) {
      print('fluttify-dart: IFlySetting::showLogcat([\'showLog\':$showLog])');
    }
  
    // invoke native method
    final result = await MethodChannel('com.fluttify/xftts_fluttify').invokeMethod('IFlySetting::showLogcat', {"showLog": showLog});
  
  
    // handle native call
  
  
    // convert native result to dart side object
    if (result == null) {
      return null;
    } else {
    
      return result;
    }
  }
  
  static Future<void> setLogFile(LOG_LEVEL level) async {
    // print log
    if (fluttifyLogEnabled) {
      print('fluttify-dart: IFlySetting::setLogFile([])');
    }
  
    // invoke native method
    final result = await MethodChannel('com.fluttify/xftts_fluttify').invokeMethod('IFlySetting::setLogFile', {"level": level.index});
  
  
    // handle native call
  
  
    // convert native result to dart side object
    if (result == null) {
      return null;
    } else {
    
      return result;
    }
  }
  
  static Future<void> setLogFilePath(String path) async {
    // print log
    if (fluttifyLogEnabled) {
      print('fluttify-dart: IFlySetting::setLogFilePath([\'path\':$path])');
    }
  
    // invoke native method
    final result = await MethodChannel('com.fluttify/xftts_fluttify').invokeMethod('IFlySetting::setLogFilePath', {"path": path});
  
  
    // handle native call
  
  
    // convert native result to dart side object
    if (result == null) {
      return null;
    } else {
    
      return result;
    }
  }
  
}