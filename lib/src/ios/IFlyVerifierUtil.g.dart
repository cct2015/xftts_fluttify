//////////////////////////////////////////////////////////
// GENERATED BY FLUTTIFY. DO NOT EDIT IT.
//////////////////////////////////////////////////////////

import 'dart:typed_data';

import 'package:xftts_fluttify/src/ios/ios.export.g.dart';
import 'package:xftts_fluttify/src/android/android.export.g.dart';
import 'package:flutter/foundation.dart';
import 'package:flutter/services.dart';

// ignore_for_file: non_constant_identifier_names, camel_case_types, missing_return, unused_import
class IFlyVerifierUtil extends NSObject  {
  // generate getters
  

  // generate setters
  

  // generate methods
  static Future<String> generateNumberPassword(int length) async {
    // print log
    if (fluttifyLogEnabled) {
      print('fluttify-dart: IFlyVerifierUtil::generateNumberPassword([\'length\':$length])');
    }
  
    // invoke native method
    final result = await MethodChannel('com.fluttify/xftts_fluttify').invokeMethod('IFlyVerifierUtil::generateNumberPassword', {"length": length});
  
  
    // handle native call
  
  
    // convert native result to dart side object
    if (result == null) {
      return null;
    } else {
    
      return result;
    }
  }
  
  static Future<UIImage> ARGBToGray(UIImage sourceImage) async {
    // print log
    if (fluttifyLogEnabled) {
      print('fluttify-dart: IFlyVerifierUtil::ARGBToGray([])');
    }
  
    // invoke native method
    final result = await MethodChannel('com.fluttify/xftts_fluttify').invokeMethod('IFlyVerifierUtil::ARGBToGray', {"sourceImage": sourceImage.refId});
  
  
    // handle native call
  
  
    // convert native result to dart side object
    if (result == null) {
      return null;
    } else {
      kNativeObjectPool.add(UIImage()..refId = result..tag = 'xftts_fluttify');
      return UIImage()..refId = result..tag = 'xftts_fluttify';
    }
  }
  
}