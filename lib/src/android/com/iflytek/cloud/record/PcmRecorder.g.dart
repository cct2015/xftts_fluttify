//////////////////////////////////////////////////////////
// GENERATED BY FLUTTIFY. DO NOT EDIT IT.
//////////////////////////////////////////////////////////

import 'dart:typed_data';

import 'package:xftts_fluttify/src/ios/ios.export.g.dart';
import 'package:xftts_fluttify/src/android/android.export.g.dart';
import 'package:flutter/foundation.dart';
import 'package:flutter/services.dart';

// ignore_for_file: non_constant_identifier_names, camel_case_types, missing_return, unused_import
class com_iflytek_cloud_record_PcmRecorder extends java_lang_Object  {
  // generate getters
  

  // generate setters
  

  // generate methods
  Future<void> stopRecord(bool var1) async {
    // print log
    if (fluttifyLogEnabled) {
      print('fluttify-dart: com.iflytek.cloud.record.PcmRecorder@$refId::stopRecord([\'var1\':$var1])');
    }
  
    // invoke native method
    final result = await MethodChannel('com.fluttify/xftts_fluttify').invokeMethod('com.iflytek.cloud.record.PcmRecorder::stopRecord', {"var1": var1, "refId": refId});
  
  
    // handle native call
  
  
    // convert native result to dart side object
    if (result == null) {
      return null;
    } else {
    
      return result;
    }
  }
  
  Future<void> startRecording(com_iflytek_cloud_record_PcmRecorder_PcmRecordListener var1) async {
    // print log
    if (fluttifyLogEnabled) {
      print('fluttify-dart: com.iflytek.cloud.record.PcmRecorder@$refId::startRecording([])');
    }
  
    // invoke native method
    final result = await MethodChannel('com.fluttify/xftts_fluttify').invokeMethod('com.iflytek.cloud.record.PcmRecorder::startRecording', {"refId": refId});
  
  
    // handle native call
    MethodChannel('com.iflytek.cloud.record.PcmRecorder::startRecording::Callback')
        .setMethodCallHandler((methodCall) async {
          final args = methodCall.arguments as Map;
          // final refId = args['callerRefId'] as int;
          // if (refId != this.refId) return;
  
          switch (methodCall.method) {
            case 'Callback::com.iflytek.cloud.record.PcmRecorder.PcmRecordListener::onRecordBuffer':
              // print log
              if (fluttifyLogEnabled) {
                print('fluttify-dart-callback: onRecordBuffer([\'var1\':$args[var1], \'var2\':$args[var2], \'var3\':$args[var3]])');
              }
        
              // handle the native call
              var1?.onRecordBuffer(args['var1'], args['var2'], args['var3']);
              break;
            case 'Callback::com.iflytek.cloud.record.PcmRecorder.PcmRecordListener::onError':
              // print log
              if (fluttifyLogEnabled) {
                print('fluttify-dart-callback: onError([])');
              }
        
              // handle the native call
              var1?.onError(com_iflytek_cloud_SpeechError()..refId = (args['var1'])..tag = 'xftts_fluttify');
              break;
            case 'Callback::com.iflytek.cloud.record.PcmRecorder.PcmRecordListener::onRecordStarted':
              // print log
              if (fluttifyLogEnabled) {
                print('fluttify-dart-callback: onRecordStarted([\'var1\':$args[var1]])');
              }
        
              // handle the native call
              var1?.onRecordStarted(args['var1']);
              break;
            case 'Callback::com.iflytek.cloud.record.PcmRecorder.PcmRecordListener::onRecordReleased':
              // print log
              if (fluttifyLogEnabled) {
                print('fluttify-dart-callback: onRecordReleased([])');
              }
        
              // handle the native call
              var1?.onRecordReleased();
              break;
            default:
              break;
          }
        });
  
    // convert native result to dart side object
    if (result == null) {
      return null;
    } else {
    
      return result;
    }
  }
  
  Future<void> run() async {
    // print log
    if (fluttifyLogEnabled) {
      print('fluttify-dart: com.iflytek.cloud.record.PcmRecorder@$refId::run([])');
    }
  
    // invoke native method
    final result = await MethodChannel('com.fluttify/xftts_fluttify').invokeMethod('com.iflytek.cloud.record.PcmRecorder::run', {"refId": refId});
  
  
    // handle native call
  
  
    // convert native result to dart side object
    if (result == null) {
      return null;
    } else {
    
      return result;
    }
  }
  
}