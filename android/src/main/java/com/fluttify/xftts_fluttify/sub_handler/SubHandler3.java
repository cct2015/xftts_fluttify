//////////////////////////////////////////////////////////
// GENERATED BY FLUTTIFY. DO NOT EDIT IT.
//////////////////////////////////////////////////////////

package com.fluttify.xftts_fluttify.sub_handler;

import android.os.Bundle;
import android.util.Log;

import java.util.ArrayList;
import java.util.Collection;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

import androidx.annotation.NonNull;
import io.flutter.embedding.engine.plugins.FlutterPlugin;
import io.flutter.plugin.common.BinaryMessenger;
import io.flutter.plugin.common.MethodCall;
import io.flutter.plugin.common.MethodChannel;
import io.flutter.plugin.common.PluginRegistry.Registrar;
import io.flutter.plugin.platform.PlatformViewRegistry;

import com.fluttify.xftts_fluttify.XfttsFluttifyPlugin.Handler;

import static me.yohom.foundation_fluttify.FoundationFluttifyPluginKt.getEnableLog;
import static me.yohom.foundation_fluttify.FoundationFluttifyPluginKt.getHEAP;

@SuppressWarnings("ALL")
public class SubHandler3 {
    public static Map<String, Handler> getSubHandler(BinaryMessenger messenger) {
        return new HashMap<String, Handler>() {{
            // method
            put("com.iflytek.cloud.WakeuperListener::onVolumeChanged", (args, methodResult) -> {
                // args
                // jsonable arg
                int var1 = (int) ((Map<String, Object>) args).get("var1");
            
                // ref
                int refId = (int) ((Map<String, Object>) args).get("refId");
                com.iflytek.cloud.WakeuperListener ref = (com.iflytek.cloud.WakeuperListener) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.iflytek.cloud.WakeuperListener@" + refId + "::onVolumeChanged(" + var1 + ")");
                }
            
                // invoke native method
                try {
                    ref.onVolumeChanged(var1);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                String jsonableResult = "success";
            
                methodResult.success(jsonableResult);
            });
            // method
            put("com.iflytek.cloud.InitListener::onInit", (args, methodResult) -> {
                // args
                // jsonable arg
                int var1 = (int) ((Map<String, Object>) args).get("var1");
            
                // ref
                int refId = (int) ((Map<String, Object>) args).get("refId");
                com.iflytek.cloud.InitListener ref = (com.iflytek.cloud.InitListener) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.iflytek.cloud.InitListener@" + refId + "::onInit(" + var1 + ")");
                }
            
                // invoke native method
                try {
                    ref.onInit(var1);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                String jsonableResult = "success";
            
                methodResult.success(jsonableResult);
            });
            // method
            put("com.iflytek.cloud.DataDownloader::downloadData", (args, methodResult) -> {
                // args
            
            
                // ref
                int refId = (int) ((Map<String, Object>) args).get("refId");
                com.iflytek.cloud.DataDownloader ref = (com.iflytek.cloud.DataDownloader) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.iflytek.cloud.DataDownloader@" + refId + "::downloadData(" + "" + ")");
                }
            
                // invoke native method
                int result;
                try {
                    result = ref.downloadData(new com.iflytek.cloud.SpeechListener() {
                    // method channel
                    MethodChannel callbackChannel = new MethodChannel(messenger, "com.iflytek.cloud.DataDownloader::downloadData::Callback");
            
                    // call dart method
                    @Override
                    public void onEvent(int var1, android.os.Bundle var2) {
                        // print log
                        if (getEnableLog()) {
                            Log.d("java-callback", "fluttify-java-callback: onEvent(" + var1 + var2 + ")");
                        }
            
                        // convert to jsonable data
                        // jsonable arg
                        int argvar1 = var1;
                        // ref arg
                        final Integer argvar2;
                        if (var2 != null) {
                            argvar2 = System.identityHashCode(var2);
                            getHEAP().put(argvar2, var2);
                        } else {
                            argvar2 = null;
                        }
            
                        // call dart method
                        callbackChannel.invokeMethod(
                                "Callback::com.iflytek.cloud.SpeechListener::onEvent",
                                new HashMap<String, Object>() {{
                                    put("var1", argvar1);
                                    put("var2", argvar2);
                                }}
                        );
            
                        // method result
            
                    }
            
                    @Override
                    public void onBufferReceived(byte[] var1) {
                        // print log
                        if (getEnableLog()) {
                            Log.d("java-callback", "fluttify-java-callback: onBufferReceived(" + var1 + ")");
                        }
            
                        // convert to jsonable data
                        // jsonable arg
                        byte[] argvar1 = var1;
            
                        // call dart method
                        callbackChannel.invokeMethod(
                                "Callback::com.iflytek.cloud.SpeechListener::onBufferReceived",
                                new HashMap<String, Object>() {{
                                    put("var1", argvar1);
                                }}
                        );
            
                        // method result
            
                    }
            
                    @Override
                    public void onCompleted(com.iflytek.cloud.SpeechError var1) {
                        // print log
                        if (getEnableLog()) {
                            Log.d("java-callback", "fluttify-java-callback: onCompleted(" + var1 + ")");
                        }
            
                        // convert to jsonable data
                        // ref arg
                        final Integer argvar1;
                        if (var1 != null) {
                            argvar1 = System.identityHashCode(var1);
                            getHEAP().put(argvar1, var1);
                        } else {
                            argvar1 = null;
                        }
            
                        // call dart method
                        callbackChannel.invokeMethod(
                                "Callback::com.iflytek.cloud.SpeechListener::onCompleted",
                                new HashMap<String, Object>() {{
                                    put("var1", argvar1);
                                }}
                        );
            
                        // method result
            
                    }
            
                });
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                int jsonableResult = result;
            
                methodResult.success(jsonableResult);
            });
            // method
            put("com.iflytek.cloud.RequestListener::onEvent", (args, methodResult) -> {
                // args
                // jsonable arg
                int var1 = (int) ((Map<String, Object>) args).get("var1");
                // ref arg
                android.os.Bundle var2 = (android.os.Bundle) getHEAP().get((int) ((Map<String, Object>) args).get("var2"));
            
                // ref
                int refId = (int) ((Map<String, Object>) args).get("refId");
                com.iflytek.cloud.RequestListener ref = (com.iflytek.cloud.RequestListener) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.iflytek.cloud.RequestListener@" + refId + "::onEvent(" + var1 + var2 + ")");
                }
            
                // invoke native method
                try {
                    ref.onEvent(var1, var2);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                String jsonableResult = "success";
            
                methodResult.success(jsonableResult);
            });
            // method
            put("com.iflytek.cloud.RequestListener::onBufferReceived", (args, methodResult) -> {
                // args
                // jsonable arg
                byte[] var1 = (byte[]) ((Map<String, Object>) args).get("var1");
            
                // ref
                int refId = (int) ((Map<String, Object>) args).get("refId");
                com.iflytek.cloud.RequestListener ref = (com.iflytek.cloud.RequestListener) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.iflytek.cloud.RequestListener@" + refId + "::onBufferReceived(" + var1 + ")");
                }
            
                // invoke native method
                try {
                    ref.onBufferReceived(var1);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                String jsonableResult = "success";
            
                methodResult.success(jsonableResult);
            });
            // method
            put("com.iflytek.cloud.RequestListener::onCompleted", (args, methodResult) -> {
                // args
                // ref arg
                com.iflytek.cloud.SpeechError var1 = (com.iflytek.cloud.SpeechError) getHEAP().get((int) ((Map<String, Object>) args).get("var1"));
            
                // ref
                int refId = (int) ((Map<String, Object>) args).get("refId");
                com.iflytek.cloud.RequestListener ref = (com.iflytek.cloud.RequestListener) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.iflytek.cloud.RequestListener@" + refId + "::onCompleted(" + var1 + ")");
                }
            
                // invoke native method
                try {
                    ref.onCompleted(var1);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                String jsonableResult = "success";
            
                methodResult.success(jsonableResult);
            });
            // method
            put("com.iflytek.cloud.SpeechEvaluator::createEvaluator", (args, methodResult) -> {
                // args
                // ref arg
                android.content.Context var0 = (android.content.Context) getHEAP().get((int) ((Map<String, Object>) args).get("var0"));
            
                // ref
            
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.iflytek.cloud.SpeechEvaluator::createEvaluator(" + var0 + ")");
                }
            
                // invoke native method
                com.iflytek.cloud.SpeechEvaluator result;
                try {
                    result = com.iflytek.cloud.SpeechEvaluator.createEvaluator(var0, new com.iflytek.cloud.InitListener() {
                    // method channel
                    MethodChannel callbackChannel = new MethodChannel(messenger, "com.iflytek.cloud.SpeechEvaluator::createEvaluator::Callback");
            
                    // call dart method
                    @Override
                    public void onInit(int var1) {
                        // print log
                        if (getEnableLog()) {
                            Log.d("java-callback", "fluttify-java-callback: onInit(" + var1 + ")");
                        }
            
                        // convert to jsonable data
                        // jsonable arg
                        int argvar1 = var1;
            
                        // call dart method
                        callbackChannel.invokeMethod(
                                "Callback::com.iflytek.cloud.InitListener::onInit",
                                new HashMap<String, Object>() {{
                                    put("var1", argvar1);
                                }}
                        );
            
                        // method result
            
                    }
            
                });
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                Integer jsonableResult = null;
                if (result != null) {
                    jsonableResult = System.identityHashCode(result);
                    getHEAP().put(jsonableResult, result);
                }
            
                methodResult.success(jsonableResult);
            });
            // method
            put("com.iflytek.cloud.SpeechEvaluator::getEvaluator", (args, methodResult) -> {
                // args
            
            
                // ref
            
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.iflytek.cloud.SpeechEvaluator::getEvaluator(" + "" + ")");
                }
            
                // invoke native method
                com.iflytek.cloud.SpeechEvaluator result;
                try {
                    result = com.iflytek.cloud.SpeechEvaluator.getEvaluator();
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                Integer jsonableResult = null;
                if (result != null) {
                    jsonableResult = System.identityHashCode(result);
                    getHEAP().put(jsonableResult, result);
                }
            
                methodResult.success(jsonableResult);
            });
            // method
            put("com.iflytek.cloud.SpeechEvaluator::startEvaluating__String__String__com_iflytek_cloud_EvaluatorListener", (args, methodResult) -> {
                // args
                // jsonable arg
                String var1 = (String) ((Map<String, Object>) args).get("var1");
                // jsonable arg
                String var2 = (String) ((Map<String, Object>) args).get("var2");
            
                // ref
                int refId = (int) ((Map<String, Object>) args).get("refId");
                com.iflytek.cloud.SpeechEvaluator ref = (com.iflytek.cloud.SpeechEvaluator) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.iflytek.cloud.SpeechEvaluator@" + refId + "::startEvaluating(" + var1 + var2 + ")");
                }
            
                // invoke native method
                int result;
                try {
                    result = ref.startEvaluating(var1, var2, new com.iflytek.cloud.EvaluatorListener() {
                    // method channel
                    MethodChannel callbackChannel = new MethodChannel(messenger, "com.iflytek.cloud.SpeechEvaluator::startEvaluating__String__String__com_iflytek_cloud_EvaluatorListener::Callback");
            
                    // call dart method
                    @Override
                    public void onVolumeChanged(int var1, byte[] var2) {
                        // print log
                        if (getEnableLog()) {
                            Log.d("java-callback", "fluttify-java-callback: onVolumeChanged(" + var1 + var2 + ")");
                        }
            
                        // convert to jsonable data
                        // jsonable arg
                        int argvar1 = var1;
                        // jsonable arg
                        byte[] argvar2 = var2;
            
                        // call dart method
                        callbackChannel.invokeMethod(
                                "Callback::com.iflytek.cloud.EvaluatorListener::onVolumeChanged",
                                new HashMap<String, Object>() {{
                                    put("var1", argvar1);
                                    put("var2", argvar2);
                                }}
                        );
            
                        // method result
            
                    }
            
                    @Override
                    public void onBeginOfSpeech() {
                        // print log
                        if (getEnableLog()) {
                            Log.d("java-callback", "fluttify-java-callback: onBeginOfSpeech(" + "" + ")");
                        }
            
                        // convert to jsonable data
            
            
                        // call dart method
                        callbackChannel.invokeMethod(
                                "Callback::com.iflytek.cloud.EvaluatorListener::onBeginOfSpeech",
                                new HashMap<String, Object>() {{
                
                                }}
                        );
            
                        // method result
            
                    }
            
                    @Override
                    public void onEndOfSpeech() {
                        // print log
                        if (getEnableLog()) {
                            Log.d("java-callback", "fluttify-java-callback: onEndOfSpeech(" + "" + ")");
                        }
            
                        // convert to jsonable data
            
            
                        // call dart method
                        callbackChannel.invokeMethod(
                                "Callback::com.iflytek.cloud.EvaluatorListener::onEndOfSpeech",
                                new HashMap<String, Object>() {{
                
                                }}
                        );
            
                        // method result
            
                    }
            
                    @Override
                    public void onResult(com.iflytek.cloud.EvaluatorResult var1, boolean var2) {
                        // print log
                        if (getEnableLog()) {
                            Log.d("java-callback", "fluttify-java-callback: onResult(" + var1 + var2 + ")");
                        }
            
                        // convert to jsonable data
                        // ref arg
                        final Integer argvar1;
                        if (var1 != null) {
                            argvar1 = System.identityHashCode(var1);
                            getHEAP().put(argvar1, var1);
                        } else {
                            argvar1 = null;
                        }
                        // jsonable arg
                        boolean argvar2 = var2;
            
                        // call dart method
                        callbackChannel.invokeMethod(
                                "Callback::com.iflytek.cloud.EvaluatorListener::onResult",
                                new HashMap<String, Object>() {{
                                    put("var1", argvar1);
                                    put("var2", argvar2);
                                }}
                        );
            
                        // method result
            
                    }
            
                    @Override
                    public void onError(com.iflytek.cloud.SpeechError var1) {
                        // print log
                        if (getEnableLog()) {
                            Log.d("java-callback", "fluttify-java-callback: onError(" + var1 + ")");
                        }
            
                        // convert to jsonable data
                        // ref arg
                        final Integer argvar1;
                        if (var1 != null) {
                            argvar1 = System.identityHashCode(var1);
                            getHEAP().put(argvar1, var1);
                        } else {
                            argvar1 = null;
                        }
            
                        // call dart method
                        callbackChannel.invokeMethod(
                                "Callback::com.iflytek.cloud.EvaluatorListener::onError",
                                new HashMap<String, Object>() {{
                                    put("var1", argvar1);
                                }}
                        );
            
                        // method result
            
                    }
            
                    @Override
                    public void onEvent(int var1, int var2, int var3, android.os.Bundle var4) {
                        // print log
                        if (getEnableLog()) {
                            Log.d("java-callback", "fluttify-java-callback: onEvent(" + var1 + var2 + var3 + var4 + ")");
                        }
            
                        // convert to jsonable data
                        // jsonable arg
                        int argvar1 = var1;
                        // jsonable arg
                        int argvar2 = var2;
                        // jsonable arg
                        int argvar3 = var3;
                        // ref arg
                        final Integer argvar4;
                        if (var4 != null) {
                            argvar4 = System.identityHashCode(var4);
                            getHEAP().put(argvar4, var4);
                        } else {
                            argvar4 = null;
                        }
            
                        // call dart method
                        callbackChannel.invokeMethod(
                                "Callback::com.iflytek.cloud.EvaluatorListener::onEvent",
                                new HashMap<String, Object>() {{
                                    put("var1", argvar1);
                                    put("var2", argvar2);
                                    put("var3", argvar3);
                                    put("var4", argvar4);
                                }}
                        );
            
                        // method result
            
                    }
            
                });
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                int jsonableResult = result;
            
                methodResult.success(jsonableResult);
            });
            // method
            put("com.iflytek.cloud.SpeechEvaluator::startEvaluating__Uint8List__String__com_iflytek_cloud_EvaluatorListener", (args, methodResult) -> {
                // args
                // jsonable arg
                byte[] var1 = (byte[]) ((Map<String, Object>) args).get("var1");
                // jsonable arg
                String var2 = (String) ((Map<String, Object>) args).get("var2");
            
                // ref
                int refId = (int) ((Map<String, Object>) args).get("refId");
                com.iflytek.cloud.SpeechEvaluator ref = (com.iflytek.cloud.SpeechEvaluator) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.iflytek.cloud.SpeechEvaluator@" + refId + "::startEvaluating(" + var1 + var2 + ")");
                }
            
                // invoke native method
                int result;
                try {
                    result = ref.startEvaluating(var1, var2, new com.iflytek.cloud.EvaluatorListener() {
                    // method channel
                    MethodChannel callbackChannel = new MethodChannel(messenger, "com.iflytek.cloud.SpeechEvaluator::startEvaluating__Uint8List__String__com_iflytek_cloud_EvaluatorListener::Callback");
            
                    // call dart method
                    @Override
                    public void onVolumeChanged(int var1, byte[] var2) {
                        // print log
                        if (getEnableLog()) {
                            Log.d("java-callback", "fluttify-java-callback: onVolumeChanged(" + var1 + var2 + ")");
                        }
            
                        // convert to jsonable data
                        // jsonable arg
                        int argvar1 = var1;
                        // jsonable arg
                        byte[] argvar2 = var2;
            
                        // call dart method
                        callbackChannel.invokeMethod(
                                "Callback::com.iflytek.cloud.EvaluatorListener::onVolumeChanged",
                                new HashMap<String, Object>() {{
                                    put("var1", argvar1);
                                    put("var2", argvar2);
                                }}
                        );
            
                        // method result
            
                    }
            
                    @Override
                    public void onBeginOfSpeech() {
                        // print log
                        if (getEnableLog()) {
                            Log.d("java-callback", "fluttify-java-callback: onBeginOfSpeech(" + "" + ")");
                        }
            
                        // convert to jsonable data
            
            
                        // call dart method
                        callbackChannel.invokeMethod(
                                "Callback::com.iflytek.cloud.EvaluatorListener::onBeginOfSpeech",
                                new HashMap<String, Object>() {{
                
                                }}
                        );
            
                        // method result
            
                    }
            
                    @Override
                    public void onEndOfSpeech() {
                        // print log
                        if (getEnableLog()) {
                            Log.d("java-callback", "fluttify-java-callback: onEndOfSpeech(" + "" + ")");
                        }
            
                        // convert to jsonable data
            
            
                        // call dart method
                        callbackChannel.invokeMethod(
                                "Callback::com.iflytek.cloud.EvaluatorListener::onEndOfSpeech",
                                new HashMap<String, Object>() {{
                
                                }}
                        );
            
                        // method result
            
                    }
            
                    @Override
                    public void onResult(com.iflytek.cloud.EvaluatorResult var1, boolean var2) {
                        // print log
                        if (getEnableLog()) {
                            Log.d("java-callback", "fluttify-java-callback: onResult(" + var1 + var2 + ")");
                        }
            
                        // convert to jsonable data
                        // ref arg
                        final Integer argvar1;
                        if (var1 != null) {
                            argvar1 = System.identityHashCode(var1);
                            getHEAP().put(argvar1, var1);
                        } else {
                            argvar1 = null;
                        }
                        // jsonable arg
                        boolean argvar2 = var2;
            
                        // call dart method
                        callbackChannel.invokeMethod(
                                "Callback::com.iflytek.cloud.EvaluatorListener::onResult",
                                new HashMap<String, Object>() {{
                                    put("var1", argvar1);
                                    put("var2", argvar2);
                                }}
                        );
            
                        // method result
            
                    }
            
                    @Override
                    public void onError(com.iflytek.cloud.SpeechError var1) {
                        // print log
                        if (getEnableLog()) {
                            Log.d("java-callback", "fluttify-java-callback: onError(" + var1 + ")");
                        }
            
                        // convert to jsonable data
                        // ref arg
                        final Integer argvar1;
                        if (var1 != null) {
                            argvar1 = System.identityHashCode(var1);
                            getHEAP().put(argvar1, var1);
                        } else {
                            argvar1 = null;
                        }
            
                        // call dart method
                        callbackChannel.invokeMethod(
                                "Callback::com.iflytek.cloud.EvaluatorListener::onError",
                                new HashMap<String, Object>() {{
                                    put("var1", argvar1);
                                }}
                        );
            
                        // method result
            
                    }
            
                    @Override
                    public void onEvent(int var1, int var2, int var3, android.os.Bundle var4) {
                        // print log
                        if (getEnableLog()) {
                            Log.d("java-callback", "fluttify-java-callback: onEvent(" + var1 + var2 + var3 + var4 + ")");
                        }
            
                        // convert to jsonable data
                        // jsonable arg
                        int argvar1 = var1;
                        // jsonable arg
                        int argvar2 = var2;
                        // jsonable arg
                        int argvar3 = var3;
                        // ref arg
                        final Integer argvar4;
                        if (var4 != null) {
                            argvar4 = System.identityHashCode(var4);
                            getHEAP().put(argvar4, var4);
                        } else {
                            argvar4 = null;
                        }
            
                        // call dart method
                        callbackChannel.invokeMethod(
                                "Callback::com.iflytek.cloud.EvaluatorListener::onEvent",
                                new HashMap<String, Object>() {{
                                    put("var1", argvar1);
                                    put("var2", argvar2);
                                    put("var3", argvar3);
                                    put("var4", argvar4);
                                }}
                        );
            
                        // method result
            
                    }
            
                });
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                int jsonableResult = result;
            
                methodResult.success(jsonableResult);
            });
            // method
            put("com.iflytek.cloud.SpeechEvaluator::writeAudio", (args, methodResult) -> {
                // args
                // jsonable arg
                byte[] var1 = (byte[]) ((Map<String, Object>) args).get("var1");
                // jsonable arg
                int var2 = (int) ((Map<String, Object>) args).get("var2");
                // jsonable arg
                int var3 = (int) ((Map<String, Object>) args).get("var3");
            
                // ref
                int refId = (int) ((Map<String, Object>) args).get("refId");
                com.iflytek.cloud.SpeechEvaluator ref = (com.iflytek.cloud.SpeechEvaluator) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.iflytek.cloud.SpeechEvaluator@" + refId + "::writeAudio(" + var1 + var2 + var3 + ")");
                }
            
                // invoke native method
                boolean result;
                try {
                    result = ref.writeAudio(var1, var2, var3);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                boolean jsonableResult = result;
            
                methodResult.success(jsonableResult);
            });
            // method
            put("com.iflytek.cloud.SpeechEvaluator::isEvaluating", (args, methodResult) -> {
                // args
            
            
                // ref
                int refId = (int) ((Map<String, Object>) args).get("refId");
                com.iflytek.cloud.SpeechEvaluator ref = (com.iflytek.cloud.SpeechEvaluator) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.iflytek.cloud.SpeechEvaluator@" + refId + "::isEvaluating(" + "" + ")");
                }
            
                // invoke native method
                boolean result;
                try {
                    result = ref.isEvaluating();
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                boolean jsonableResult = result;
            
                methodResult.success(jsonableResult);
            });
            // method
            put("com.iflytek.cloud.SpeechEvaluator::stopEvaluating", (args, methodResult) -> {
                // args
            
            
                // ref
                int refId = (int) ((Map<String, Object>) args).get("refId");
                com.iflytek.cloud.SpeechEvaluator ref = (com.iflytek.cloud.SpeechEvaluator) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.iflytek.cloud.SpeechEvaluator@" + refId + "::stopEvaluating(" + "" + ")");
                }
            
                // invoke native method
                try {
                    ref.stopEvaluating();
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                String jsonableResult = "success";
            
                methodResult.success(jsonableResult);
            });
            // method
            put("com.iflytek.cloud.SpeechEvaluator::cancel", (args, methodResult) -> {
                // args
            
            
                // ref
                int refId = (int) ((Map<String, Object>) args).get("refId");
                com.iflytek.cloud.SpeechEvaluator ref = (com.iflytek.cloud.SpeechEvaluator) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.iflytek.cloud.SpeechEvaluator@" + refId + "::cancel(" + "" + ")");
                }
            
                // invoke native method
                try {
                    ref.cancel();
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                String jsonableResult = "success";
            
                methodResult.success(jsonableResult);
            });
            // method
            put("com.iflytek.cloud.SpeechEvaluator::setParameter", (args, methodResult) -> {
                // args
                // jsonable arg
                String var1 = (String) ((Map<String, Object>) args).get("var1");
                // jsonable arg
                String var2 = (String) ((Map<String, Object>) args).get("var2");
            
                // ref
                int refId = (int) ((Map<String, Object>) args).get("refId");
                com.iflytek.cloud.SpeechEvaluator ref = (com.iflytek.cloud.SpeechEvaluator) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.iflytek.cloud.SpeechEvaluator@" + refId + "::setParameter(" + var1 + var2 + ")");
                }
            
                // invoke native method
                boolean result;
                try {
                    result = ref.setParameter(var1, var2);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                boolean jsonableResult = result;
            
                methodResult.success(jsonableResult);
            });
            // method
            put("com.iflytek.cloud.SpeechEvaluator::getParameter", (args, methodResult) -> {
                // args
                // jsonable arg
                String var1 = (String) ((Map<String, Object>) args).get("var1");
            
                // ref
                int refId = (int) ((Map<String, Object>) args).get("refId");
                com.iflytek.cloud.SpeechEvaluator ref = (com.iflytek.cloud.SpeechEvaluator) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.iflytek.cloud.SpeechEvaluator@" + refId + "::getParameter(" + var1 + ")");
                }
            
                // invoke native method
                String result;
                try {
                    result = ref.getParameter(var1);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                String jsonableResult = result;
            
                methodResult.success(jsonableResult);
            });
            // method
            put("com.iflytek.cloud.SpeechEvaluator::destroy", (args, methodResult) -> {
                // args
            
            
                // ref
                int refId = (int) ((Map<String, Object>) args).get("refId");
                com.iflytek.cloud.SpeechEvaluator ref = (com.iflytek.cloud.SpeechEvaluator) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.iflytek.cloud.SpeechEvaluator@" + refId + "::destroy(" + "" + ")");
                }
            
                // invoke native method
                boolean result;
                try {
                    result = ref.destroy();
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                boolean jsonableResult = result;
            
                methodResult.success(jsonableResult);
            });
            // method
            put("com.iflytek.cloud.TranscripterListener::onVolumeChanged", (args, methodResult) -> {
                // args
                // jsonable arg
                int var1 = (int) ((Map<String, Object>) args).get("var1");
                // jsonable arg
                byte[] var2 = (byte[]) ((Map<String, Object>) args).get("var2");
            
                // ref
                int refId = (int) ((Map<String, Object>) args).get("refId");
                com.iflytek.cloud.TranscripterListener ref = (com.iflytek.cloud.TranscripterListener) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.iflytek.cloud.TranscripterListener@" + refId + "::onVolumeChanged(" + var1 + var2 + ")");
                }
            
                // invoke native method
                try {
                    ref.onVolumeChanged(var1, var2);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                String jsonableResult = "success";
            
                methodResult.success(jsonableResult);
            });
            // method
            put("com.iflytek.cloud.TranscripterListener::onBeginOfSpeech", (args, methodResult) -> {
                // args
            
            
                // ref
                int refId = (int) ((Map<String, Object>) args).get("refId");
                com.iflytek.cloud.TranscripterListener ref = (com.iflytek.cloud.TranscripterListener) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.iflytek.cloud.TranscripterListener@" + refId + "::onBeginOfSpeech(" + "" + ")");
                }
            
                // invoke native method
                try {
                    ref.onBeginOfSpeech();
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                String jsonableResult = "success";
            
                methodResult.success(jsonableResult);
            });
            // method
            put("com.iflytek.cloud.TranscripterListener::onEndOfSpeech", (args, methodResult) -> {
                // args
            
            
                // ref
                int refId = (int) ((Map<String, Object>) args).get("refId");
                com.iflytek.cloud.TranscripterListener ref = (com.iflytek.cloud.TranscripterListener) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.iflytek.cloud.TranscripterListener@" + refId + "::onEndOfSpeech(" + "" + ")");
                }
            
                // invoke native method
                try {
                    ref.onEndOfSpeech();
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                String jsonableResult = "success";
            
                methodResult.success(jsonableResult);
            });
            // method
            put("com.iflytek.cloud.TranscripterListener::onResult", (args, methodResult) -> {
                // args
                // ref arg
                com.iflytek.cloud.TranscripterResult var1 = (com.iflytek.cloud.TranscripterResult) getHEAP().get((int) ((Map<String, Object>) args).get("var1"));
                // jsonable arg
                boolean var2 = (boolean) ((Map<String, Object>) args).get("var2");
            
                // ref
                int refId = (int) ((Map<String, Object>) args).get("refId");
                com.iflytek.cloud.TranscripterListener ref = (com.iflytek.cloud.TranscripterListener) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.iflytek.cloud.TranscripterListener@" + refId + "::onResult(" + var1 + var2 + ")");
                }
            
                // invoke native method
                try {
                    ref.onResult(var1, var2);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                String jsonableResult = "success";
            
                methodResult.success(jsonableResult);
            });
            // method
            put("com.iflytek.cloud.TranscripterListener::onError", (args, methodResult) -> {
                // args
                // ref arg
                com.iflytek.cloud.SpeechError var1 = (com.iflytek.cloud.SpeechError) getHEAP().get((int) ((Map<String, Object>) args).get("var1"));
            
                // ref
                int refId = (int) ((Map<String, Object>) args).get("refId");
                com.iflytek.cloud.TranscripterListener ref = (com.iflytek.cloud.TranscripterListener) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.iflytek.cloud.TranscripterListener@" + refId + "::onError(" + var1 + ")");
                }
            
                // invoke native method
                try {
                    ref.onError(var1);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                String jsonableResult = "success";
            
                methodResult.success(jsonableResult);
            });
            // method
            put("com.iflytek.cloud.TranscripterListener::onEvent", (args, methodResult) -> {
                // args
                // jsonable arg
                int var1 = (int) ((Map<String, Object>) args).get("var1");
                // jsonable arg
                int var2 = (int) ((Map<String, Object>) args).get("var2");
                // jsonable arg
                int var3 = (int) ((Map<String, Object>) args).get("var3");
                // ref arg
                android.os.Bundle var4 = (android.os.Bundle) getHEAP().get((int) ((Map<String, Object>) args).get("var4"));
            
                // ref
                int refId = (int) ((Map<String, Object>) args).get("refId");
                com.iflytek.cloud.TranscripterListener ref = (com.iflytek.cloud.TranscripterListener) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.iflytek.cloud.TranscripterListener@" + refId + "::onEvent(" + var1 + var2 + var3 + var4 + ")");
                }
            
                // invoke native method
                try {
                    ref.onEvent(var1, var2, var3, var4);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                String jsonableResult = "success";
            
                methodResult.success(jsonableResult);
            });
            // method
            put("com.iflytek.cloud.VoiceWakeuper::createWakeuper", (args, methodResult) -> {
                // args
                // ref arg
                android.content.Context var0 = (android.content.Context) getHEAP().get((int) ((Map<String, Object>) args).get("var0"));
            
                // ref
            
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.iflytek.cloud.VoiceWakeuper::createWakeuper(" + var0 + ")");
                }
            
                // invoke native method
                com.iflytek.cloud.VoiceWakeuper result;
                try {
                    result = com.iflytek.cloud.VoiceWakeuper.createWakeuper(var0, new com.iflytek.cloud.InitListener() {
                    // method channel
                    MethodChannel callbackChannel = new MethodChannel(messenger, "com.iflytek.cloud.VoiceWakeuper::createWakeuper::Callback");
            
                    // call dart method
                    @Override
                    public void onInit(int var1) {
                        // print log
                        if (getEnableLog()) {
                            Log.d("java-callback", "fluttify-java-callback: onInit(" + var1 + ")");
                        }
            
                        // convert to jsonable data
                        // jsonable arg
                        int argvar1 = var1;
            
                        // call dart method
                        callbackChannel.invokeMethod(
                                "Callback::com.iflytek.cloud.InitListener::onInit",
                                new HashMap<String, Object>() {{
                                    put("var1", argvar1);
                                }}
                        );
            
                        // method result
            
                    }
            
                });
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                Integer jsonableResult = null;
                if (result != null) {
                    jsonableResult = System.identityHashCode(result);
                    getHEAP().put(jsonableResult, result);
                }
            
                methodResult.success(jsonableResult);
            });
            // method
            put("com.iflytek.cloud.VoiceWakeuper::getWakeuper", (args, methodResult) -> {
                // args
            
            
                // ref
            
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.iflytek.cloud.VoiceWakeuper::getWakeuper(" + "" + ")");
                }
            
                // invoke native method
                com.iflytek.cloud.VoiceWakeuper result;
                try {
                    result = com.iflytek.cloud.VoiceWakeuper.getWakeuper();
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                Integer jsonableResult = null;
                if (result != null) {
                    jsonableResult = System.identityHashCode(result);
                    getHEAP().put(jsonableResult, result);
                }
            
                methodResult.success(jsonableResult);
            });
            // method
            put("com.iflytek.cloud.VoiceWakeuper::queryResource", (args, methodResult) -> {
                // args
                // jsonable arg
                String var1 = (String) ((Map<String, Object>) args).get("var1");
            
                // ref
                int refId = (int) ((Map<String, Object>) args).get("refId");
                com.iflytek.cloud.VoiceWakeuper ref = (com.iflytek.cloud.VoiceWakeuper) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.iflytek.cloud.VoiceWakeuper@" + refId + "::queryResource(" + var1 + ")");
                }
            
                // invoke native method
                int result;
                try {
                    result = ref.queryResource(var1, new com.iflytek.cloud.RequestListener() {
                    // method channel
                    MethodChannel callbackChannel = new MethodChannel(messenger, "com.iflytek.cloud.VoiceWakeuper::queryResource::Callback");
            
                    // call dart method
                    @Override
                    public void onEvent(int var1, android.os.Bundle var2) {
                        // print log
                        if (getEnableLog()) {
                            Log.d("java-callback", "fluttify-java-callback: onEvent(" + var1 + var2 + ")");
                        }
            
                        // convert to jsonable data
                        // jsonable arg
                        int argvar1 = var1;
                        // ref arg
                        final Integer argvar2;
                        if (var2 != null) {
                            argvar2 = System.identityHashCode(var2);
                            getHEAP().put(argvar2, var2);
                        } else {
                            argvar2 = null;
                        }
            
                        // call dart method
                        callbackChannel.invokeMethod(
                                "Callback::com.iflytek.cloud.RequestListener::onEvent",
                                new HashMap<String, Object>() {{
                                    put("var1", argvar1);
                                    put("var2", argvar2);
                                }}
                        );
            
                        // method result
            
                    }
            
                    @Override
                    public void onBufferReceived(byte[] var1) {
                        // print log
                        if (getEnableLog()) {
                            Log.d("java-callback", "fluttify-java-callback: onBufferReceived(" + var1 + ")");
                        }
            
                        // convert to jsonable data
                        // jsonable arg
                        byte[] argvar1 = var1;
            
                        // call dart method
                        callbackChannel.invokeMethod(
                                "Callback::com.iflytek.cloud.RequestListener::onBufferReceived",
                                new HashMap<String, Object>() {{
                                    put("var1", argvar1);
                                }}
                        );
            
                        // method result
            
                    }
            
                    @Override
                    public void onCompleted(com.iflytek.cloud.SpeechError var1) {
                        // print log
                        if (getEnableLog()) {
                            Log.d("java-callback", "fluttify-java-callback: onCompleted(" + var1 + ")");
                        }
            
                        // convert to jsonable data
                        // ref arg
                        final Integer argvar1;
                        if (var1 != null) {
                            argvar1 = System.identityHashCode(var1);
                            getHEAP().put(argvar1, var1);
                        } else {
                            argvar1 = null;
                        }
            
                        // call dart method
                        callbackChannel.invokeMethod(
                                "Callback::com.iflytek.cloud.RequestListener::onCompleted",
                                new HashMap<String, Object>() {{
                                    put("var1", argvar1);
                                }}
                        );
            
                        // method result
            
                    }
            
                });
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                int jsonableResult = result;
            
                methodResult.success(jsonableResult);
            });
            // method
            put("com.iflytek.cloud.VoiceWakeuper::downloadResource", (args, methodResult) -> {
                // args
                // jsonable arg
                String var1 = (String) ((Map<String, Object>) args).get("var1");
                // jsonable arg
                String var2 = (String) ((Map<String, Object>) args).get("var2");
                // jsonable arg
                String var3 = (String) ((Map<String, Object>) args).get("var3");
            
                // ref
                int refId = (int) ((Map<String, Object>) args).get("refId");
                com.iflytek.cloud.VoiceWakeuper ref = (com.iflytek.cloud.VoiceWakeuper) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.iflytek.cloud.VoiceWakeuper@" + refId + "::downloadResource(" + var1 + var2 + var3 + ")");
                }
            
                // invoke native method
                int result;
                try {
                    result = ref.downloadResource(var1, var2, var3, new com.iflytek.cloud.util.FileDownloadListener() {
                    // method channel
                    MethodChannel callbackChannel = new MethodChannel(messenger, "com.iflytek.cloud.VoiceWakeuper::downloadResource::Callback");
            
                    // call dart method
                    @Override
                    public void onStart() {
                        // print log
                        if (getEnableLog()) {
                            Log.d("java-callback", "fluttify-java-callback: onStart(" + "" + ")");
                        }
            
                        // convert to jsonable data
            
            
                        // call dart method
                        callbackChannel.invokeMethod(
                                "Callback::com.iflytek.cloud.util.FileDownloadListener::onStart",
                                new HashMap<String, Object>() {{
                
                                }}
                        );
            
                        // method result
            
                    }
            
                    @Override
                    public void onProgress(int var1) {
                        // print log
                        if (getEnableLog()) {
                            Log.d("java-callback", "fluttify-java-callback: onProgress(" + var1 + ")");
                        }
            
                        // convert to jsonable data
                        // jsonable arg
                        int argvar1 = var1;
            
                        // call dart method
                        callbackChannel.invokeMethod(
                                "Callback::com.iflytek.cloud.util.FileDownloadListener::onProgress",
                                new HashMap<String, Object>() {{
                                    put("var1", argvar1);
                                }}
                        );
            
                        // method result
            
                    }
            
                    @Override
                    public void onCompleted(String var1, com.iflytek.cloud.SpeechError var2) {
                        // print log
                        if (getEnableLog()) {
                            Log.d("java-callback", "fluttify-java-callback: onCompleted(" + var1 + var2 + ")");
                        }
            
                        // convert to jsonable data
                        // jsonable arg
                        String argvar1 = var1;
                        // ref arg
                        final Integer argvar2;
                        if (var2 != null) {
                            argvar2 = System.identityHashCode(var2);
                            getHEAP().put(argvar2, var2);
                        } else {
                            argvar2 = null;
                        }
            
                        // call dart method
                        callbackChannel.invokeMethod(
                                "Callback::com.iflytek.cloud.util.FileDownloadListener::onCompleted",
                                new HashMap<String, Object>() {{
                                    put("var1", argvar1);
                                    put("var2", argvar2);
                                }}
                        );
            
                        // method result
            
                    }
            
                });
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                int jsonableResult = result;
            
                methodResult.success(jsonableResult);
            });
            // method
            put("com.iflytek.cloud.VoiceWakeuper::startListening", (args, methodResult) -> {
                // args
            
            
                // ref
                int refId = (int) ((Map<String, Object>) args).get("refId");
                com.iflytek.cloud.VoiceWakeuper ref = (com.iflytek.cloud.VoiceWakeuper) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.iflytek.cloud.VoiceWakeuper@" + refId + "::startListening(" + "" + ")");
                }
            
                // invoke native method
                int result;
                try {
                    result = ref.startListening(new com.iflytek.cloud.WakeuperListener() {
                    // method channel
                    MethodChannel callbackChannel = new MethodChannel(messenger, "com.iflytek.cloud.VoiceWakeuper::startListening::Callback");
            
                    // call dart method
                    @Override
                    public void onBeginOfSpeech() {
                        // print log
                        if (getEnableLog()) {
                            Log.d("java-callback", "fluttify-java-callback: onBeginOfSpeech(" + "" + ")");
                        }
            
                        // convert to jsonable data
            
            
                        // call dart method
                        callbackChannel.invokeMethod(
                                "Callback::com.iflytek.cloud.WakeuperListener::onBeginOfSpeech",
                                new HashMap<String, Object>() {{
                
                                }}
                        );
            
                        // method result
            
                    }
            
                    @Override
                    public void onResult(com.iflytek.cloud.WakeuperResult var1) {
                        // print log
                        if (getEnableLog()) {
                            Log.d("java-callback", "fluttify-java-callback: onResult(" + var1 + ")");
                        }
            
                        // convert to jsonable data
                        // ref arg
                        final Integer argvar1;
                        if (var1 != null) {
                            argvar1 = System.identityHashCode(var1);
                            getHEAP().put(argvar1, var1);
                        } else {
                            argvar1 = null;
                        }
            
                        // call dart method
                        callbackChannel.invokeMethod(
                                "Callback::com.iflytek.cloud.WakeuperListener::onResult",
                                new HashMap<String, Object>() {{
                                    put("var1", argvar1);
                                }}
                        );
            
                        // method result
            
                    }
            
                    @Override
                    public void onError(com.iflytek.cloud.SpeechError var1) {
                        // print log
                        if (getEnableLog()) {
                            Log.d("java-callback", "fluttify-java-callback: onError(" + var1 + ")");
                        }
            
                        // convert to jsonable data
                        // ref arg
                        final Integer argvar1;
                        if (var1 != null) {
                            argvar1 = System.identityHashCode(var1);
                            getHEAP().put(argvar1, var1);
                        } else {
                            argvar1 = null;
                        }
            
                        // call dart method
                        callbackChannel.invokeMethod(
                                "Callback::com.iflytek.cloud.WakeuperListener::onError",
                                new HashMap<String, Object>() {{
                                    put("var1", argvar1);
                                }}
                        );
            
                        // method result
            
                    }
            
                    @Override
                    public void onEvent(int var1, int var2, int var3, android.os.Bundle var4) {
                        // print log
                        if (getEnableLog()) {
                            Log.d("java-callback", "fluttify-java-callback: onEvent(" + var1 + var2 + var3 + var4 + ")");
                        }
            
                        // convert to jsonable data
                        // jsonable arg
                        int argvar1 = var1;
                        // jsonable arg
                        int argvar2 = var2;
                        // jsonable arg
                        int argvar3 = var3;
                        // ref arg
                        final Integer argvar4;
                        if (var4 != null) {
                            argvar4 = System.identityHashCode(var4);
                            getHEAP().put(argvar4, var4);
                        } else {
                            argvar4 = null;
                        }
            
                        // call dart method
                        callbackChannel.invokeMethod(
                                "Callback::com.iflytek.cloud.WakeuperListener::onEvent",
                                new HashMap<String, Object>() {{
                                    put("var1", argvar1);
                                    put("var2", argvar2);
                                    put("var3", argvar3);
                                    put("var4", argvar4);
                                }}
                        );
            
                        // method result
            
                    }
            
                    @Override
                    public void onVolumeChanged(int var1) {
                        // print log
                        if (getEnableLog()) {
                            Log.d("java-callback", "fluttify-java-callback: onVolumeChanged(" + var1 + ")");
                        }
            
                        // convert to jsonable data
                        // jsonable arg
                        int argvar1 = var1;
            
                        // call dart method
                        callbackChannel.invokeMethod(
                                "Callback::com.iflytek.cloud.WakeuperListener::onVolumeChanged",
                                new HashMap<String, Object>() {{
                                    put("var1", argvar1);
                                }}
                        );
            
                        // method result
            
                    }
            
                });
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                int jsonableResult = result;
            
                methodResult.success(jsonableResult);
            });
            // method
            put("com.iflytek.cloud.VoiceWakeuper::writeAudio", (args, methodResult) -> {
                // args
                // jsonable arg
                byte[] var1 = (byte[]) ((Map<String, Object>) args).get("var1");
                // jsonable arg
                int var2 = (int) ((Map<String, Object>) args).get("var2");
                // jsonable arg
                int var3 = (int) ((Map<String, Object>) args).get("var3");
            
                // ref
                int refId = (int) ((Map<String, Object>) args).get("refId");
                com.iflytek.cloud.VoiceWakeuper ref = (com.iflytek.cloud.VoiceWakeuper) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.iflytek.cloud.VoiceWakeuper@" + refId + "::writeAudio(" + var1 + var2 + var3 + ")");
                }
            
                // invoke native method
                int result;
                try {
                    result = ref.writeAudio(var1, var2, var3);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                int jsonableResult = result;
            
                methodResult.success(jsonableResult);
            });
            // method
            put("com.iflytek.cloud.VoiceWakeuper::stopListening", (args, methodResult) -> {
                // args
            
            
                // ref
                int refId = (int) ((Map<String, Object>) args).get("refId");
                com.iflytek.cloud.VoiceWakeuper ref = (com.iflytek.cloud.VoiceWakeuper) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.iflytek.cloud.VoiceWakeuper@" + refId + "::stopListening(" + "" + ")");
                }
            
                // invoke native method
                try {
                    ref.stopListening();
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                String jsonableResult = "success";
            
                methodResult.success(jsonableResult);
            });
            // method
            put("com.iflytek.cloud.VoiceWakeuper::isListening", (args, methodResult) -> {
                // args
            
            
                // ref
                int refId = (int) ((Map<String, Object>) args).get("refId");
                com.iflytek.cloud.VoiceWakeuper ref = (com.iflytek.cloud.VoiceWakeuper) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.iflytek.cloud.VoiceWakeuper@" + refId + "::isListening(" + "" + ")");
                }
            
                // invoke native method
                boolean result;
                try {
                    result = ref.isListening();
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                boolean jsonableResult = result;
            
                methodResult.success(jsonableResult);
            });
            // method
            put("com.iflytek.cloud.VoiceWakeuper::cancel", (args, methodResult) -> {
                // args
            
            
                // ref
                int refId = (int) ((Map<String, Object>) args).get("refId");
                com.iflytek.cloud.VoiceWakeuper ref = (com.iflytek.cloud.VoiceWakeuper) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.iflytek.cloud.VoiceWakeuper@" + refId + "::cancel(" + "" + ")");
                }
            
                // invoke native method
                try {
                    ref.cancel();
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                String jsonableResult = "success";
            
                methodResult.success(jsonableResult);
            });
            // method
            put("com.iflytek.cloud.VoiceWakeuper::setParameter", (args, methodResult) -> {
                // args
                // jsonable arg
                String var1 = (String) ((Map<String, Object>) args).get("var1");
                // jsonable arg
                String var2 = (String) ((Map<String, Object>) args).get("var2");
            
                // ref
                int refId = (int) ((Map<String, Object>) args).get("refId");
                com.iflytek.cloud.VoiceWakeuper ref = (com.iflytek.cloud.VoiceWakeuper) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.iflytek.cloud.VoiceWakeuper@" + refId + "::setParameter(" + var1 + var2 + ")");
                }
            
                // invoke native method
                boolean result;
                try {
                    result = ref.setParameter(var1, var2);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                boolean jsonableResult = result;
            
                methodResult.success(jsonableResult);
            });
            // method
            put("com.iflytek.cloud.VoiceWakeuper::getParameter", (args, methodResult) -> {
                // args
                // jsonable arg
                String var1 = (String) ((Map<String, Object>) args).get("var1");
            
                // ref
                int refId = (int) ((Map<String, Object>) args).get("refId");
                com.iflytek.cloud.VoiceWakeuper ref = (com.iflytek.cloud.VoiceWakeuper) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.iflytek.cloud.VoiceWakeuper@" + refId + "::getParameter(" + var1 + ")");
                }
            
                // invoke native method
                String result;
                try {
                    result = ref.getParameter(var1);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                String jsonableResult = result;
            
                methodResult.success(jsonableResult);
            });
            // method
            put("com.iflytek.cloud.VoiceWakeuper::destroy", (args, methodResult) -> {
                // args
            
            
                // ref
                int refId = (int) ((Map<String, Object>) args).get("refId");
                com.iflytek.cloud.VoiceWakeuper ref = (com.iflytek.cloud.VoiceWakeuper) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.iflytek.cloud.VoiceWakeuper@" + refId + "::destroy(" + "" + ")");
                }
            
                // invoke native method
                boolean result;
                try {
                    result = ref.destroy();
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                boolean jsonableResult = result;
            
                methodResult.success(jsonableResult);
            });
            // method
            put("com.iflytek.cloud.EvaluatorResult::getResultString", (args, methodResult) -> {
                // args
            
            
                // ref
                int refId = (int) ((Map<String, Object>) args).get("refId");
                com.iflytek.cloud.EvaluatorResult ref = (com.iflytek.cloud.EvaluatorResult) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.iflytek.cloud.EvaluatorResult@" + refId + "::getResultString(" + "" + ")");
                }
            
                // invoke native method
                String result;
                try {
                    result = ref.getResultString();
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                String jsonableResult = result;
            
                methodResult.success(jsonableResult);
            });
            // method
            put("com.iflytek.cloud.SpeechUnderstander::createUnderstander", (args, methodResult) -> {
                // args
                // ref arg
                android.content.Context var0 = (android.content.Context) getHEAP().get((int) ((Map<String, Object>) args).get("var0"));
            
                // ref
            
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.iflytek.cloud.SpeechUnderstander::createUnderstander(" + var0 + ")");
                }
            
                // invoke native method
                com.iflytek.cloud.SpeechUnderstander result;
                try {
                    result = com.iflytek.cloud.SpeechUnderstander.createUnderstander(var0, new com.iflytek.cloud.InitListener() {
                    // method channel
                    MethodChannel callbackChannel = new MethodChannel(messenger, "com.iflytek.cloud.SpeechUnderstander::createUnderstander::Callback");
            
                    // call dart method
                    @Override
                    public void onInit(int var1) {
                        // print log
                        if (getEnableLog()) {
                            Log.d("java-callback", "fluttify-java-callback: onInit(" + var1 + ")");
                        }
            
                        // convert to jsonable data
                        // jsonable arg
                        int argvar1 = var1;
            
                        // call dart method
                        callbackChannel.invokeMethod(
                                "Callback::com.iflytek.cloud.InitListener::onInit",
                                new HashMap<String, Object>() {{
                                    put("var1", argvar1);
                                }}
                        );
            
                        // method result
            
                    }
            
                });
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                Integer jsonableResult = null;
                if (result != null) {
                    jsonableResult = System.identityHashCode(result);
                    getHEAP().put(jsonableResult, result);
                }
            
                methodResult.success(jsonableResult);
            });
            // method
            put("com.iflytek.cloud.SpeechUnderstander::getUnderstander", (args, methodResult) -> {
                // args
            
            
                // ref
            
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.iflytek.cloud.SpeechUnderstander::getUnderstander(" + "" + ")");
                }
            
                // invoke native method
                com.iflytek.cloud.SpeechUnderstander result;
                try {
                    result = com.iflytek.cloud.SpeechUnderstander.getUnderstander();
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                Integer jsonableResult = null;
                if (result != null) {
                    jsonableResult = System.identityHashCode(result);
                    getHEAP().put(jsonableResult, result);
                }
            
                methodResult.success(jsonableResult);
            });
            // method
            put("com.iflytek.cloud.SpeechUnderstander::startUnderstanding", (args, methodResult) -> {
                // args
            
            
                // ref
                int refId = (int) ((Map<String, Object>) args).get("refId");
                com.iflytek.cloud.SpeechUnderstander ref = (com.iflytek.cloud.SpeechUnderstander) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.iflytek.cloud.SpeechUnderstander@" + refId + "::startUnderstanding(" + "" + ")");
                }
            
                // invoke native method
                int result;
                try {
                    result = ref.startUnderstanding(new com.iflytek.cloud.SpeechUnderstanderListener() {
                    // method channel
                    MethodChannel callbackChannel = new MethodChannel(messenger, "com.iflytek.cloud.SpeechUnderstander::startUnderstanding::Callback");
            
                    // call dart method
                    @Override
                    public void onVolumeChanged(int var1, byte[] var2) {
                        // print log
                        if (getEnableLog()) {
                            Log.d("java-callback", "fluttify-java-callback: onVolumeChanged(" + var1 + var2 + ")");
                        }
            
                        // convert to jsonable data
                        // jsonable arg
                        int argvar1 = var1;
                        // jsonable arg
                        byte[] argvar2 = var2;
            
                        // call dart method
                        callbackChannel.invokeMethod(
                                "Callback::com.iflytek.cloud.SpeechUnderstanderListener::onVolumeChanged",
                                new HashMap<String, Object>() {{
                                    put("var1", argvar1);
                                    put("var2", argvar2);
                                }}
                        );
            
                        // method result
            
                    }
            
                    @Override
                    public void onBeginOfSpeech() {
                        // print log
                        if (getEnableLog()) {
                            Log.d("java-callback", "fluttify-java-callback: onBeginOfSpeech(" + "" + ")");
                        }
            
                        // convert to jsonable data
            
            
                        // call dart method
                        callbackChannel.invokeMethod(
                                "Callback::com.iflytek.cloud.SpeechUnderstanderListener::onBeginOfSpeech",
                                new HashMap<String, Object>() {{
                
                                }}
                        );
            
                        // method result
            
                    }
            
                    @Override
                    public void onEndOfSpeech() {
                        // print log
                        if (getEnableLog()) {
                            Log.d("java-callback", "fluttify-java-callback: onEndOfSpeech(" + "" + ")");
                        }
            
                        // convert to jsonable data
            
            
                        // call dart method
                        callbackChannel.invokeMethod(
                                "Callback::com.iflytek.cloud.SpeechUnderstanderListener::onEndOfSpeech",
                                new HashMap<String, Object>() {{
                
                                }}
                        );
            
                        // method result
            
                    }
            
                    @Override
                    public void onResult(com.iflytek.cloud.UnderstanderResult var1) {
                        // print log
                        if (getEnableLog()) {
                            Log.d("java-callback", "fluttify-java-callback: onResult(" + var1 + ")");
                        }
            
                        // convert to jsonable data
                        // ref arg
                        final Integer argvar1;
                        if (var1 != null) {
                            argvar1 = System.identityHashCode(var1);
                            getHEAP().put(argvar1, var1);
                        } else {
                            argvar1 = null;
                        }
            
                        // call dart method
                        callbackChannel.invokeMethod(
                                "Callback::com.iflytek.cloud.SpeechUnderstanderListener::onResult",
                                new HashMap<String, Object>() {{
                                    put("var1", argvar1);
                                }}
                        );
            
                        // method result
            
                    }
            
                    @Override
                    public void onError(com.iflytek.cloud.SpeechError var1) {
                        // print log
                        if (getEnableLog()) {
                            Log.d("java-callback", "fluttify-java-callback: onError(" + var1 + ")");
                        }
            
                        // convert to jsonable data
                        // ref arg
                        final Integer argvar1;
                        if (var1 != null) {
                            argvar1 = System.identityHashCode(var1);
                            getHEAP().put(argvar1, var1);
                        } else {
                            argvar1 = null;
                        }
            
                        // call dart method
                        callbackChannel.invokeMethod(
                                "Callback::com.iflytek.cloud.SpeechUnderstanderListener::onError",
                                new HashMap<String, Object>() {{
                                    put("var1", argvar1);
                                }}
                        );
            
                        // method result
            
                    }
            
                    @Override
                    public void onEvent(int var1, int var2, int var3, android.os.Bundle var4) {
                        // print log
                        if (getEnableLog()) {
                            Log.d("java-callback", "fluttify-java-callback: onEvent(" + var1 + var2 + var3 + var4 + ")");
                        }
            
                        // convert to jsonable data
                        // jsonable arg
                        int argvar1 = var1;
                        // jsonable arg
                        int argvar2 = var2;
                        // jsonable arg
                        int argvar3 = var3;
                        // ref arg
                        final Integer argvar4;
                        if (var4 != null) {
                            argvar4 = System.identityHashCode(var4);
                            getHEAP().put(argvar4, var4);
                        } else {
                            argvar4 = null;
                        }
            
                        // call dart method
                        callbackChannel.invokeMethod(
                                "Callback::com.iflytek.cloud.SpeechUnderstanderListener::onEvent",
                                new HashMap<String, Object>() {{
                                    put("var1", argvar1);
                                    put("var2", argvar2);
                                    put("var3", argvar3);
                                    put("var4", argvar4);
                                }}
                        );
            
                        // method result
            
                    }
            
                });
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                int jsonableResult = result;
            
                methodResult.success(jsonableResult);
            });
            // method
            put("com.iflytek.cloud.SpeechUnderstander::isUnderstanding", (args, methodResult) -> {
                // args
            
            
                // ref
                int refId = (int) ((Map<String, Object>) args).get("refId");
                com.iflytek.cloud.SpeechUnderstander ref = (com.iflytek.cloud.SpeechUnderstander) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.iflytek.cloud.SpeechUnderstander@" + refId + "::isUnderstanding(" + "" + ")");
                }
            
                // invoke native method
                boolean result;
                try {
                    result = ref.isUnderstanding();
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                boolean jsonableResult = result;
            
                methodResult.success(jsonableResult);
            });
            // method
            put("com.iflytek.cloud.SpeechUnderstander::writeAudio", (args, methodResult) -> {
                // args
                // jsonable arg
                byte[] var1 = (byte[]) ((Map<String, Object>) args).get("var1");
                // jsonable arg
                int var2 = (int) ((Map<String, Object>) args).get("var2");
                // jsonable arg
                int var3 = (int) ((Map<String, Object>) args).get("var3");
            
                // ref
                int refId = (int) ((Map<String, Object>) args).get("refId");
                com.iflytek.cloud.SpeechUnderstander ref = (com.iflytek.cloud.SpeechUnderstander) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.iflytek.cloud.SpeechUnderstander@" + refId + "::writeAudio(" + var1 + var2 + var3 + ")");
                }
            
                // invoke native method
                int result;
                try {
                    result = ref.writeAudio(var1, var2, var3);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                int jsonableResult = result;
            
                methodResult.success(jsonableResult);
            });
            // method
            put("com.iflytek.cloud.SpeechUnderstander::stopUnderstanding", (args, methodResult) -> {
                // args
            
            
                // ref
                int refId = (int) ((Map<String, Object>) args).get("refId");
                com.iflytek.cloud.SpeechUnderstander ref = (com.iflytek.cloud.SpeechUnderstander) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.iflytek.cloud.SpeechUnderstander@" + refId + "::stopUnderstanding(" + "" + ")");
                }
            
                // invoke native method
                try {
                    ref.stopUnderstanding();
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                String jsonableResult = "success";
            
                methodResult.success(jsonableResult);
            });
            // method
            put("com.iflytek.cloud.SpeechUnderstander::cancel", (args, methodResult) -> {
                // args
            
            
                // ref
                int refId = (int) ((Map<String, Object>) args).get("refId");
                com.iflytek.cloud.SpeechUnderstander ref = (com.iflytek.cloud.SpeechUnderstander) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.iflytek.cloud.SpeechUnderstander@" + refId + "::cancel(" + "" + ")");
                }
            
                // invoke native method
                try {
                    ref.cancel();
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                String jsonableResult = "success";
            
                methodResult.success(jsonableResult);
            });
            // method
            put("com.iflytek.cloud.SpeechUnderstander::setParameter", (args, methodResult) -> {
                // args
                // jsonable arg
                String var1 = (String) ((Map<String, Object>) args).get("var1");
                // jsonable arg
                String var2 = (String) ((Map<String, Object>) args).get("var2");
            
                // ref
                int refId = (int) ((Map<String, Object>) args).get("refId");
                com.iflytek.cloud.SpeechUnderstander ref = (com.iflytek.cloud.SpeechUnderstander) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.iflytek.cloud.SpeechUnderstander@" + refId + "::setParameter(" + var1 + var2 + ")");
                }
            
                // invoke native method
                boolean result;
                try {
                    result = ref.setParameter(var1, var2);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                boolean jsonableResult = result;
            
                methodResult.success(jsonableResult);
            });
            // method
            put("com.iflytek.cloud.SpeechUnderstander::getParameter", (args, methodResult) -> {
                // args
                // jsonable arg
                String var1 = (String) ((Map<String, Object>) args).get("var1");
            
                // ref
                int refId = (int) ((Map<String, Object>) args).get("refId");
                com.iflytek.cloud.SpeechUnderstander ref = (com.iflytek.cloud.SpeechUnderstander) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.iflytek.cloud.SpeechUnderstander@" + refId + "::getParameter(" + var1 + ")");
                }
            
                // invoke native method
                String result;
                try {
                    result = ref.getParameter(var1);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                String jsonableResult = result;
            
                methodResult.success(jsonableResult);
            });
            // method
            put("com.iflytek.cloud.SpeechUnderstander::destroy", (args, methodResult) -> {
                // args
            
            
                // ref
                int refId = (int) ((Map<String, Object>) args).get("refId");
                com.iflytek.cloud.SpeechUnderstander ref = (com.iflytek.cloud.SpeechUnderstander) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.iflytek.cloud.SpeechUnderstander@" + refId + "::destroy(" + "" + ")");
                }
            
                // invoke native method
                boolean result;
                try {
                    result = ref.destroy();
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                boolean jsonableResult = result;
            
                methodResult.success(jsonableResult);
            });
            // method
            put("com.iflytek.cloud.resource.Resource::getLanguage", (args, methodResult) -> {
                // args
            
            
                // ref
            
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.iflytek.cloud.resource.Resource::getLanguage(" + "" + ")");
                }
            
                // invoke native method
                String result;
                try {
                    result = com.iflytek.cloud.resource.Resource.getLanguage();
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                String jsonableResult = result;
            
                methodResult.success(jsonableResult);
            });
            // method
            put("com.iflytek.cloud.resource.Resource::matchLanguage", (args, methodResult) -> {
                // args
                // jsonable arg
                String var0 = (String) ((Map<String, Object>) args).get("var0");
            
                // ref
            
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.iflytek.cloud.resource.Resource::matchLanguage(" + var0 + ")");
                }
            
                // invoke native method
                boolean result;
                try {
                    result = com.iflytek.cloud.resource.Resource.matchLanguage(var0);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                boolean jsonableResult = result;
            
                methodResult.success(jsonableResult);
            });
            // method
            put("com.iflytek.cloud.resource.Resource::setTitle", (args, methodResult) -> {
                // args
                // jsonable arg
                int var0 = (int) ((Map<String, Object>) args).get("var0");
                // jsonable arg
                String var1 = (String) ((Map<String, Object>) args).get("var1");
            
                // ref
            
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.iflytek.cloud.resource.Resource::setTitle(" + var0 + var1 + ")");
                }
            
                // invoke native method
                try {
                    com.iflytek.cloud.resource.Resource.setTitle(var0, var1);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                String jsonableResult = "success";
            
                methodResult.success(jsonableResult);
            });
            // method
            put("com.iflytek.cloud.resource.Resource::getTitle", (args, methodResult) -> {
                // args
                // jsonable arg
                int var0 = (int) ((Map<String, Object>) args).get("var0");
            
                // ref
            
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.iflytek.cloud.resource.Resource::getTitle(" + var0 + ")");
                }
            
                // invoke native method
                String result;
                try {
                    result = com.iflytek.cloud.resource.Resource.getTitle(var0);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                String jsonableResult = result;
            
                methodResult.success(jsonableResult);
            });
            // method
            put("com.iflytek.cloud.resource.Resource::getText", (args, methodResult) -> {
                // args
                // jsonable arg
                int var0 = (int) ((Map<String, Object>) args).get("var0");
            
                // ref
            
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.iflytek.cloud.resource.Resource::getText(" + var0 + ")");
                }
            
                // invoke native method
                String result;
                try {
                    result = com.iflytek.cloud.resource.Resource.getText(var0);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                String jsonableResult = result;
            
                methodResult.success(jsonableResult);
            });
            // method
            put("com.iflytek.cloud.resource.Resource::setText", (args, methodResult) -> {
                // args
                // jsonable arg
                int var0 = (int) ((Map<String, Object>) args).get("var0");
                // jsonable arg
                String var1 = (String) ((Map<String, Object>) args).get("var1");
            
                // ref
            
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.iflytek.cloud.resource.Resource::setText(" + var0 + var1 + ")");
                }
            
                // invoke native method
                try {
                    com.iflytek.cloud.resource.Resource.setText(var0, var1);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                String jsonableResult = "success";
            
                methodResult.success(jsonableResult);
            });
            // method
            put("com.iflytek.cloud.resource.Resource::getErrorDescription", (args, methodResult) -> {
                // args
                // jsonable arg
                int var0 = (int) ((Map<String, Object>) args).get("var0");
            
                // ref
            
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.iflytek.cloud.resource.Resource::getErrorDescription(" + var0 + ")");
                }
            
                // invoke native method
                String result;
                try {
                    result = com.iflytek.cloud.resource.Resource.getErrorDescription(var0);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                String jsonableResult = result;
            
                methodResult.success(jsonableResult);
            });
            // method
            put("com.iflytek.cloud.resource.Resource::setErrorDescription", (args, methodResult) -> {
                // args
                // jsonable arg
                int var0 = (int) ((Map<String, Object>) args).get("var0");
                // jsonable arg
                String var1 = (String) ((Map<String, Object>) args).get("var1");
            
                // ref
            
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.iflytek.cloud.resource.Resource::setErrorDescription(" + var0 + var1 + ")");
                }
            
                // invoke native method
                try {
                    com.iflytek.cloud.resource.Resource.setErrorDescription(var0, var1);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                String jsonableResult = "success";
            
                methodResult.success(jsonableResult);
            });
            // method
            put("com.iflytek.cloud.resource.Resource::getErrorTag", (args, methodResult) -> {
                // args
                // jsonable arg
                int var0 = (int) ((Map<String, Object>) args).get("var0");
            
                // ref
            
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.iflytek.cloud.resource.Resource::getErrorTag(" + var0 + ")");
                }
            
                // invoke native method
                String result;
                try {
                    result = com.iflytek.cloud.resource.Resource.getErrorTag(var0);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                String jsonableResult = result;
            
                methodResult.success(jsonableResult);
            });
            // method
            put("com.iflytek.cloud.FaceDetector::createDetector", (args, methodResult) -> {
                // args
                // ref arg
                android.content.Context var0 = (android.content.Context) getHEAP().get((int) ((Map<String, Object>) args).get("var0"));
                // jsonable arg
                String var1 = (String) ((Map<String, Object>) args).get("var1");
            
                // ref
            
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.iflytek.cloud.FaceDetector::createDetector(" + var0 + var1 + ")");
                }
            
                // invoke native method
                com.iflytek.cloud.FaceDetector result;
                try {
                    result = com.iflytek.cloud.FaceDetector.createDetector(var0, var1);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                Integer jsonableResult = null;
                if (result != null) {
                    jsonableResult = System.identityHashCode(result);
                    getHEAP().put(jsonableResult, result);
                }
            
                methodResult.success(jsonableResult);
            });
            // method
            put("com.iflytek.cloud.FaceDetector::getDetector", (args, methodResult) -> {
                // args
            
            
                // ref
            
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.iflytek.cloud.FaceDetector::getDetector(" + "" + ")");
                }
            
                // invoke native method
                com.iflytek.cloud.FaceDetector result;
                try {
                    result = com.iflytek.cloud.FaceDetector.getDetector();
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                Integer jsonableResult = null;
                if (result != null) {
                    jsonableResult = System.identityHashCode(result);
                    getHEAP().put(jsonableResult, result);
                }
            
                methodResult.success(jsonableResult);
            });
            // method
            put("com.iflytek.cloud.FaceDetector::detectARGB", (args, methodResult) -> {
                // args
                // ref arg
                android.graphics.Bitmap var1 = (android.graphics.Bitmap) getHEAP().get((int) ((Map<String, Object>) args).get("var1"));
            
                // ref
                int refId = (int) ((Map<String, Object>) args).get("refId");
                com.iflytek.cloud.FaceDetector ref = (com.iflytek.cloud.FaceDetector) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.iflytek.cloud.FaceDetector@" + refId + "::detectARGB(" + var1 + ")");
                }
            
                // invoke native method
                String result;
                try {
                    result = ref.detectARGB(var1);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                String jsonableResult = result;
            
                methodResult.success(jsonableResult);
            });
            // method
            put("com.iflytek.cloud.FaceDetector::detectGray", (args, methodResult) -> {
                // args
                // ref arg
                android.graphics.Bitmap var1 = (android.graphics.Bitmap) getHEAP().get((int) ((Map<String, Object>) args).get("var1"));
            
                // ref
                int refId = (int) ((Map<String, Object>) args).get("refId");
                com.iflytek.cloud.FaceDetector ref = (com.iflytek.cloud.FaceDetector) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.iflytek.cloud.FaceDetector@" + refId + "::detectGray(" + var1 + ")");
                }
            
                // invoke native method
                String result;
                try {
                    result = ref.detectGray(var1);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                String jsonableResult = result;
            
                methodResult.success(jsonableResult);
            });
            // method
            put("com.iflytek.cloud.FaceDetector::trackNV21", (args, methodResult) -> {
                // args
                // jsonable arg
                byte[] var1 = (byte[]) ((Map<String, Object>) args).get("var1");
                // jsonable arg
                int var2 = (int) ((Map<String, Object>) args).get("var2");
                // jsonable arg
                int var3 = (int) ((Map<String, Object>) args).get("var3");
                // jsonable arg
                int var4 = (int) ((Map<String, Object>) args).get("var4");
                // jsonable arg
                int var5 = (int) ((Map<String, Object>) args).get("var5");
            
                // ref
                int refId = (int) ((Map<String, Object>) args).get("refId");
                com.iflytek.cloud.FaceDetector ref = (com.iflytek.cloud.FaceDetector) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.iflytek.cloud.FaceDetector@" + refId + "::trackNV21(" + var1 + var2 + var3 + var4 + var5 + ")");
                }
            
                // invoke native method
                String result;
                try {
                    result = ref.trackNV21(var1, var2, var3, var4, var5);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                String jsonableResult = result;
            
                methodResult.success(jsonableResult);
            });
            // method
            put("com.iflytek.cloud.FaceDetector::destroy", (args, methodResult) -> {
                // args
            
            
                // ref
                int refId = (int) ((Map<String, Object>) args).get("refId");
                com.iflytek.cloud.FaceDetector ref = (com.iflytek.cloud.FaceDetector) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.iflytek.cloud.FaceDetector@" + refId + "::destroy(" + "" + ")");
                }
            
                // invoke native method
                boolean result;
                try {
                    result = ref.destroy();
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                boolean jsonableResult = result;
            
                methodResult.success(jsonableResult);
            });
            // method
            put("com.iflytek.cloud.WakeuperResult::getResultString", (args, methodResult) -> {
                // args
            
            
                // ref
                int refId = (int) ((Map<String, Object>) args).get("refId");
                com.iflytek.cloud.WakeuperResult ref = (com.iflytek.cloud.WakeuperResult) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.iflytek.cloud.WakeuperResult@" + refId + "::getResultString(" + "" + ")");
                }
            
                // invoke native method
                String result;
                try {
                    result = ref.getResultString();
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                String jsonableResult = result;
            
                methodResult.success(jsonableResult);
            });
            // method
            put("com.iflytek.cloud.WakeuperResult::getBuffer", (args, methodResult) -> {
                // args
            
            
                // ref
                int refId = (int) ((Map<String, Object>) args).get("refId");
                com.iflytek.cloud.WakeuperResult ref = (com.iflytek.cloud.WakeuperResult) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.iflytek.cloud.WakeuperResult@" + refId + "::getBuffer(" + "" + ")");
                }
            
                // invoke native method
                byte[] result;
                try {
                    result = ref.getBuffer();
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                byte[] jsonableResult = result;
            
                methodResult.success(jsonableResult);
            });
            // method
            put("com.iflytek.cloud.DataUploader::uploadData", (args, methodResult) -> {
                // args
                // jsonable arg
                String var2 = (String) ((Map<String, Object>) args).get("var2");
                // jsonable arg
                byte[] var3 = (byte[]) ((Map<String, Object>) args).get("var3");
            
                // ref
                int refId = (int) ((Map<String, Object>) args).get("refId");
                com.iflytek.cloud.DataUploader ref = (com.iflytek.cloud.DataUploader) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.iflytek.cloud.DataUploader@" + refId + "::uploadData(" + var2 + var3 + ")");
                }
            
                // invoke native method
                int result;
                try {
                    result = ref.uploadData(new com.iflytek.cloud.SpeechListener() {
                    // method channel
                    MethodChannel callbackChannel = new MethodChannel(messenger, "com.iflytek.cloud.DataUploader::uploadData::Callback");
            
                    // call dart method
                    @Override
                    public void onEvent(int var1, android.os.Bundle var2) {
                        // print log
                        if (getEnableLog()) {
                            Log.d("java-callback", "fluttify-java-callback: onEvent(" + var1 + var2 + ")");
                        }
            
                        // convert to jsonable data
                        // jsonable arg
                        int argvar1 = var1;
                        // ref arg
                        final Integer argvar2;
                        if (var2 != null) {
                            argvar2 = System.identityHashCode(var2);
                            getHEAP().put(argvar2, var2);
                        } else {
                            argvar2 = null;
                        }
            
                        // call dart method
                        callbackChannel.invokeMethod(
                                "Callback::com.iflytek.cloud.SpeechListener::onEvent",
                                new HashMap<String, Object>() {{
                                    put("var1", argvar1);
                                    put("var2", argvar2);
                                }}
                        );
            
                        // method result
            
                    }
            
                    @Override
                    public void onBufferReceived(byte[] var1) {
                        // print log
                        if (getEnableLog()) {
                            Log.d("java-callback", "fluttify-java-callback: onBufferReceived(" + var1 + ")");
                        }
            
                        // convert to jsonable data
                        // jsonable arg
                        byte[] argvar1 = var1;
            
                        // call dart method
                        callbackChannel.invokeMethod(
                                "Callback::com.iflytek.cloud.SpeechListener::onBufferReceived",
                                new HashMap<String, Object>() {{
                                    put("var1", argvar1);
                                }}
                        );
            
                        // method result
            
                    }
            
                    @Override
                    public void onCompleted(com.iflytek.cloud.SpeechError var1) {
                        // print log
                        if (getEnableLog()) {
                            Log.d("java-callback", "fluttify-java-callback: onCompleted(" + var1 + ")");
                        }
            
                        // convert to jsonable data
                        // ref arg
                        final Integer argvar1;
                        if (var1 != null) {
                            argvar1 = System.identityHashCode(var1);
                            getHEAP().put(argvar1, var1);
                        } else {
                            argvar1 = null;
                        }
            
                        // call dart method
                        callbackChannel.invokeMethod(
                                "Callback::com.iflytek.cloud.SpeechListener::onCompleted",
                                new HashMap<String, Object>() {{
                                    put("var1", argvar1);
                                }}
                        );
            
                        // method result
            
                    }
            
                }, var2, var3);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                int jsonableResult = result;
            
                methodResult.success(jsonableResult);
            });
            // method
            put("com.iflytek.cloud.RecognizerResult::getResultString", (args, methodResult) -> {
                // args
            
            
                // ref
                int refId = (int) ((Map<String, Object>) args).get("refId");
                com.iflytek.cloud.RecognizerResult ref = (com.iflytek.cloud.RecognizerResult) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.iflytek.cloud.RecognizerResult@" + refId + "::getResultString(" + "" + ")");
                }
            
                // invoke native method
                String result;
                try {
                    result = ref.getResultString();
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                String jsonableResult = result;
            
                methodResult.success(jsonableResult);
            });
            // method
            put("com.iflytek.cloud.IdentityListener::onResult", (args, methodResult) -> {
                // args
                // ref arg
                com.iflytek.cloud.IdentityResult var1 = (com.iflytek.cloud.IdentityResult) getHEAP().get((int) ((Map<String, Object>) args).get("var1"));
                // jsonable arg
                boolean var2 = (boolean) ((Map<String, Object>) args).get("var2");
            
                // ref
                int refId = (int) ((Map<String, Object>) args).get("refId");
                com.iflytek.cloud.IdentityListener ref = (com.iflytek.cloud.IdentityListener) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.iflytek.cloud.IdentityListener@" + refId + "::onResult(" + var1 + var2 + ")");
                }
            
                // invoke native method
                try {
                    ref.onResult(var1, var2);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                String jsonableResult = "success";
            
                methodResult.success(jsonableResult);
            });
            // method
            put("com.iflytek.cloud.IdentityListener::onError", (args, methodResult) -> {
                // args
                // ref arg
                com.iflytek.cloud.SpeechError var1 = (com.iflytek.cloud.SpeechError) getHEAP().get((int) ((Map<String, Object>) args).get("var1"));
            
                // ref
                int refId = (int) ((Map<String, Object>) args).get("refId");
                com.iflytek.cloud.IdentityListener ref = (com.iflytek.cloud.IdentityListener) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.iflytek.cloud.IdentityListener@" + refId + "::onError(" + var1 + ")");
                }
            
                // invoke native method
                try {
                    ref.onError(var1);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                String jsonableResult = "success";
            
                methodResult.success(jsonableResult);
            });
            // method
            put("com.iflytek.cloud.IdentityListener::onEvent", (args, methodResult) -> {
                // args
                // jsonable arg
                int var1 = (int) ((Map<String, Object>) args).get("var1");
                // jsonable arg
                int var2 = (int) ((Map<String, Object>) args).get("var2");
                // jsonable arg
                int var3 = (int) ((Map<String, Object>) args).get("var3");
                // ref arg
                android.os.Bundle var4 = (android.os.Bundle) getHEAP().get((int) ((Map<String, Object>) args).get("var4"));
            
                // ref
                int refId = (int) ((Map<String, Object>) args).get("refId");
                com.iflytek.cloud.IdentityListener ref = (com.iflytek.cloud.IdentityListener) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.iflytek.cloud.IdentityListener@" + refId + "::onEvent(" + var1 + var2 + var3 + var4 + ")");
                }
            
                // invoke native method
                try {
                    ref.onEvent(var1, var2, var3, var4);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                String jsonableResult = "success";
            
                methodResult.success(jsonableResult);
            });
            // method
            put("com.iflytek.cloud.TranscripterResult::getResultString", (args, methodResult) -> {
                // args
            
            
                // ref
                int refId = (int) ((Map<String, Object>) args).get("refId");
                com.iflytek.cloud.TranscripterResult ref = (com.iflytek.cloud.TranscripterResult) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.iflytek.cloud.TranscripterResult@" + refId + "::getResultString(" + "" + ")");
                }
            
                // invoke native method
                String result;
                try {
                    result = ref.getResultString();
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                String jsonableResult = result;
            
                methodResult.success(jsonableResult);
            });
            // method
            put("com.iflytek.cloud.Version::getVersion", (args, methodResult) -> {
                // args
            
            
                // ref
            
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.iflytek.cloud.Version::getVersion(" + "" + ")");
                }
            
                // invoke native method
                String result;
                try {
                    result = com.iflytek.cloud.Version.getVersion();
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                String jsonableResult = result;
            
                methodResult.success(jsonableResult);
            });
            // method
            put("com.iflytek.cloud.UnderstanderResult::getResultString", (args, methodResult) -> {
                // args
            
            
                // ref
                int refId = (int) ((Map<String, Object>) args).get("refId");
                com.iflytek.cloud.UnderstanderResult ref = (com.iflytek.cloud.UnderstanderResult) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.iflytek.cloud.UnderstanderResult@" + refId + "::getResultString(" + "" + ")");
                }
            
                // invoke native method
                String result;
                try {
                    result = ref.getResultString();
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                String jsonableResult = result;
            
                methodResult.success(jsonableResult);
            });
            // method
            put("com.iflytek.cloud.TextUnderstanderListener::onResult", (args, methodResult) -> {
                // args
                // ref arg
                com.iflytek.cloud.UnderstanderResult var1 = (com.iflytek.cloud.UnderstanderResult) getHEAP().get((int) ((Map<String, Object>) args).get("var1"));
            
                // ref
                int refId = (int) ((Map<String, Object>) args).get("refId");
                com.iflytek.cloud.TextUnderstanderListener ref = (com.iflytek.cloud.TextUnderstanderListener) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.iflytek.cloud.TextUnderstanderListener@" + refId + "::onResult(" + var1 + ")");
                }
            
                // invoke native method
                try {
                    ref.onResult(var1);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                String jsonableResult = "success";
            
                methodResult.success(jsonableResult);
            });
            // method
            put("com.iflytek.cloud.TextUnderstanderListener::onError", (args, methodResult) -> {
                // args
                // ref arg
                com.iflytek.cloud.SpeechError var1 = (com.iflytek.cloud.SpeechError) getHEAP().get((int) ((Map<String, Object>) args).get("var1"));
            
                // ref
                int refId = (int) ((Map<String, Object>) args).get("refId");
                com.iflytek.cloud.TextUnderstanderListener ref = (com.iflytek.cloud.TextUnderstanderListener) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.iflytek.cloud.TextUnderstanderListener@" + refId + "::onError(" + var1 + ")");
                }
            
                // invoke native method
                try {
                    ref.onError(var1);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                String jsonableResult = "success";
            
                methodResult.success(jsonableResult);
            });
            // method
            put("com.iflytek.msc.MetaVAD::VADInitialize", (args, methodResult) -> {
                // args
                // jsonable arg
                byte[] var0 = (byte[]) ((Map<String, Object>) args).get("var0");
            
                // ref
            
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.iflytek.msc.MetaVAD::VADInitialize(" + var0 + ")");
                }
            
                // invoke native method
                int result;
                try {
                    result = com.iflytek.msc.MetaVAD.VADInitialize(var0);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                int jsonableResult = result;
            
                methodResult.success(jsonableResult);
            });
            // method
            put("com.iflytek.msc.MetaVAD::VADUninitialize", (args, methodResult) -> {
                // args
            
            
                // ref
            
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.iflytek.msc.MetaVAD::VADUninitialize(" + "" + ")");
                }
            
                // invoke native method
                int result;
                try {
                    result = com.iflytek.msc.MetaVAD.VADUninitialize();
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                int jsonableResult = result;
            
                methodResult.success(jsonableResult);
            });
            // method
            put("com.iflytek.msc.MetaVAD::VADLoadResource", (args, methodResult) -> {
                // args
                // jsonable arg
                int var0 = (int) ((Map<String, Object>) args).get("var0");
                // jsonable arg
                byte[] var1 = (byte[]) ((Map<String, Object>) args).get("var1");
            
                // ref
            
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.iflytek.msc.MetaVAD::VADLoadResource(" + var0 + var1 + ")");
                }
            
                // invoke native method
                int result;
                try {
                    result = com.iflytek.msc.MetaVAD.VADLoadResource(var0, var1);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                int jsonableResult = result;
            
                methodResult.success(jsonableResult);
            });
            // method
            put("com.iflytek.msc.MetaVAD::VADDelResource", (args, methodResult) -> {
                // args
                // jsonable arg
                int var0 = (int) ((Map<String, Object>) args).get("var0");
            
                // ref
            
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.iflytek.msc.MetaVAD::VADDelResource(" + var0 + ")");
                }
            
                // invoke native method
                int result;
                try {
                    result = com.iflytek.msc.MetaVAD.VADDelResource(var0);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                int jsonableResult = result;
            
                methodResult.success(jsonableResult);
            });
            // method
            put("com.iflytek.msc.MetaVAD::VADCreateSession", (args, methodResult) -> {
                // args
                // ref arg
                com.iflytek.msc.MetaVAD.Instance var0 = (com.iflytek.msc.MetaVAD.Instance) getHEAP().get((int) ((Map<String, Object>) args).get("var0"));
            
                // ref
            
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.iflytek.msc.MetaVAD::VADCreateSession(" + var0 + ")");
                }
            
                // invoke native method
                int result;
                try {
                    result = com.iflytek.msc.MetaVAD.VADCreateSession(var0);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                int jsonableResult = result;
            
                methodResult.success(jsonableResult);
            });
            // method
            put("com.iflytek.msc.MetaVAD::VADDestroySession", (args, methodResult) -> {
                // args
                // ref arg
                com.iflytek.msc.MetaVAD.Instance var0 = (com.iflytek.msc.MetaVAD.Instance) getHEAP().get((int) ((Map<String, Object>) args).get("var0"));
            
                // ref
            
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.iflytek.msc.MetaVAD::VADDestroySession(" + var0 + ")");
                }
            
                // invoke native method
                int result;
                try {
                    result = com.iflytek.msc.MetaVAD.VADDestroySession(var0);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                int jsonableResult = result;
            
                methodResult.success(jsonableResult);
            });
            // method
            put("com.iflytek.msc.MetaVAD::VADResetSession", (args, methodResult) -> {
                // args
                // ref arg
                com.iflytek.msc.MetaVAD.Instance var0 = (com.iflytek.msc.MetaVAD.Instance) getHEAP().get((int) ((Map<String, Object>) args).get("var0"));
            
                // ref
            
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.iflytek.msc.MetaVAD::VADResetSession(" + var0 + ")");
                }
            
                // invoke native method
                int result;
                try {
                    result = com.iflytek.msc.MetaVAD.VADResetSession(var0);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                int jsonableResult = result;
            
                methodResult.success(jsonableResult);
            });
            // method
            put("com.iflytek.msc.MetaVAD::VADAppendPCM", (args, methodResult) -> {
                // args
                // ref arg
                com.iflytek.msc.MetaVAD.Instance var0 = (com.iflytek.msc.MetaVAD.Instance) getHEAP().get((int) ((Map<String, Object>) args).get("var0"));
                // jsonable arg
                byte[] var1 = (byte[]) ((Map<String, Object>) args).get("var1");
                // jsonable arg
                int var2 = (int) ((Map<String, Object>) args).get("var2");
                // jsonable arg
                int var3 = (int) ((Map<String, Object>) args).get("var3");
                // jsonable arg
                int var4 = (int) ((Map<String, Object>) args).get("var4");
            
                // ref
            
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.iflytek.msc.MetaVAD::VADAppendPCM(" + var0 + var1 + var2 + var3 + var4 + ")");
                }
            
                // invoke native method
                int result;
                try {
                    result = com.iflytek.msc.MetaVAD.VADAppendPCM(var0, var1, var2, var3, var4);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                int jsonableResult = result;
            
                methodResult.success(jsonableResult);
            });
            // method
            put("com.iflytek.msc.MetaVAD::VADGetSeg", (args, methodResult) -> {
                // args
                // ref arg
                com.iflytek.msc.MetaVAD.Instance var0 = (com.iflytek.msc.MetaVAD.Instance) getHEAP().get((int) ((Map<String, Object>) args).get("var0"));
            
                // ref
            
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.iflytek.msc.MetaVAD::VADGetSeg(" + var0 + ")");
                }
            
                // invoke native method
                int result;
                try {
                    result = com.iflytek.msc.MetaVAD.VADGetSeg(var0);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                int jsonableResult = result;
            
                methodResult.success(jsonableResult);
            });
            // method
            put("com.iflytek.msc.MetaVAD::VADSetParam", (args, methodResult) -> {
                // args
                // ref arg
                com.iflytek.msc.MetaVAD.Instance var0 = (com.iflytek.msc.MetaVAD.Instance) getHEAP().get((int) ((Map<String, Object>) args).get("var0"));
                // jsonable arg
                byte[] var1 = (byte[]) ((Map<String, Object>) args).get("var1");
                // jsonable arg
                byte[] var2 = (byte[]) ((Map<String, Object>) args).get("var2");
            
                // ref
            
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.iflytek.msc.MetaVAD::VADSetParam(" + var0 + var1 + var2 + ")");
                }
            
                // invoke native method
                int result;
                try {
                    result = com.iflytek.msc.MetaVAD.VADSetParam(var0, var1, var2);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                int jsonableResult = result;
            
                methodResult.success(jsonableResult);
            });
            // method
            put("com.iflytek.msc.MetaVAD::VADGetSentConfidence", (args, methodResult) -> {
                // args
                // ref arg
                com.iflytek.msc.MetaVAD.Instance var0 = (com.iflytek.msc.MetaVAD.Instance) getHEAP().get((int) ((Map<String, Object>) args).get("var0"));
            
                // ref
            
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.iflytek.msc.MetaVAD::VADGetSentConfidence(" + var0 + ")");
                }
            
                // invoke native method
                float result;
                try {
                    result = com.iflytek.msc.MetaVAD.VADGetSentConfidence(var0);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                float jsonableResult = result;
            
                methodResult.success(jsonableResult);
            });
            // method
            put("com.iflytek.msc.MetaVAD::VADResetSentence", (args, methodResult) -> {
                // args
                // ref arg
                com.iflytek.msc.MetaVAD.Instance var0 = (com.iflytek.msc.MetaVAD.Instance) getHEAP().get((int) ((Map<String, Object>) args).get("var0"));
            
                // ref
            
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.iflytek.msc.MetaVAD::VADResetSentence(" + var0 + ")");
                }
            
                // invoke native method
                int result;
                try {
                    result = com.iflytek.msc.MetaVAD.VADResetSentence(var0);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                int jsonableResult = result;
            
                methodResult.success(jsonableResult);
            });
            // method
            put("com.iflytek.msc.VAD::Initialize", (args, methodResult) -> {
                // args
                // jsonable arg
                int var0 = (int) ((Map<String, Object>) args).get("var0");
            
                // ref
            
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.iflytek.msc.VAD::Initialize(" + var0 + ")");
                }
            
                // invoke native method
                long result;
                try {
                    result = com.iflytek.msc.VAD.Initialize(var0);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                long jsonableResult = result;
            
                methodResult.success(jsonableResult);
            });
            // method
            put("com.iflytek.msc.VAD::Uninitialize", (args, methodResult) -> {
                // args
                // jsonable arg
                long var0 = (long) (int) ((Map<String, Object>) args).get("var0");
            
                // ref
            
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.iflytek.msc.VAD::Uninitialize(" + var0 + ")");
                }
            
                // invoke native method
                try {
                    com.iflytek.msc.VAD.Uninitialize(var0);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                String jsonableResult = "success";
            
                methodResult.success(jsonableResult);
            });
            // method
            put("com.iflytek.msc.VAD::Reset", (args, methodResult) -> {
                // args
                // jsonable arg
                long var0 = (long) (int) ((Map<String, Object>) args).get("var0");
            
                // ref
            
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.iflytek.msc.VAD::Reset(" + var0 + ")");
                }
            
                // invoke native method
                try {
                    com.iflytek.msc.VAD.Reset(var0);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                String jsonableResult = "success";
            
                methodResult.success(jsonableResult);
            });
            // method
            put("com.iflytek.msc.VAD::AppendData", (args, methodResult) -> {
                // args
                // jsonable arg
                long var0 = (long) (int) ((Map<String, Object>) args).get("var0");
                // jsonable arg
                byte[] var2 = (byte[]) ((Map<String, Object>) args).get("var2");
                // jsonable arg
                int var3 = (int) ((Map<String, Object>) args).get("var3");
            
                // ref
            
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.iflytek.msc.VAD::AppendData(" + var0 + var2 + var3 + ")");
                }
            
                // invoke native method
                int result;
                try {
                    result = com.iflytek.msc.VAD.AppendData(var0, var2, var3);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                int jsonableResult = result;
            
                methodResult.success(jsonableResult);
            });
            // method
            put("com.iflytek.msc.VAD::SetParam", (args, methodResult) -> {
                // args
                // jsonable arg
                long var0 = (long) (int) ((Map<String, Object>) args).get("var0");
                // jsonable arg
                int var2 = (int) ((Map<String, Object>) args).get("var2");
                // jsonable arg
                int var3 = (int) ((Map<String, Object>) args).get("var3");
            
                // ref
            
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.iflytek.msc.VAD::SetParam(" + var0 + var2 + var3 + ")");
                }
            
                // invoke native method
                int result;
                try {
                    result = com.iflytek.msc.VAD.SetParam(var0, var2, var3);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                int jsonableResult = result;
            
                methodResult.success(jsonableResult);
            });
            // method
            put("com.iflytek.msc.VAD::EndAudioData", (args, methodResult) -> {
                // args
                // jsonable arg
                long var0 = (long) (int) ((Map<String, Object>) args).get("var0");
            
                // ref
            
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.iflytek.msc.VAD::EndAudioData(" + var0 + ")");
                }
            
                // invoke native method
                int result;
                try {
                    result = com.iflytek.msc.VAD.EndAudioData(var0);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                int jsonableResult = result;
            
                methodResult.success(jsonableResult);
            });
            // method
            put("com.iflytek.msc.VAD::CalcVolumLevel", (args, methodResult) -> {
                // args
                // jsonable arg
                long var0 = (long) (int) ((Map<String, Object>) args).get("var0");
                // jsonable arg
                byte[] var2 = (byte[]) ((Map<String, Object>) args).get("var2");
                // jsonable arg
                int var3 = (int) ((Map<String, Object>) args).get("var3");
                // ref arg
                com.iflytek.msc.VAD.VadData var4 = (com.iflytek.msc.VAD.VadData) getHEAP().get((int) ((Map<String, Object>) args).get("var4"));
            
                // ref
            
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.iflytek.msc.VAD::CalcVolumLevel(" + var0 + var2 + var3 + var4 + ")");
                }
            
                // invoke native method
                int result;
                try {
                    result = com.iflytek.msc.VAD.CalcVolumLevel(var0, var2, var3, var4);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                int jsonableResult = result;
            
                methodResult.success(jsonableResult);
            });
            // method
            put("com.iflytek.msc.VAD::FetchData", (args, methodResult) -> {
                // args
                // jsonable arg
                long var0 = (long) (int) ((Map<String, Object>) args).get("var0");
                // ref arg
                com.iflytek.msc.VAD.VadData var2 = (com.iflytek.msc.VAD.VadData) getHEAP().get((int) ((Map<String, Object>) args).get("var2"));
            
                // ref
            
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.iflytek.msc.VAD::FetchData(" + var0 + var2 + ")");
                }
            
                // invoke native method
                int result;
                try {
                    result = com.iflytek.msc.VAD.FetchData(var0, var2);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                int jsonableResult = result;
            
                methodResult.success(jsonableResult);
            });
            // method
            put("com.iflytek.msc.VAD::GetLastSpeechPos", (args, methodResult) -> {
                // args
                // jsonable arg
                long var0 = (long) (int) ((Map<String, Object>) args).get("var0");
                // ref arg
                com.iflytek.msc.VAD.VadData var2 = (com.iflytek.msc.VAD.VadData) getHEAP().get((int) ((Map<String, Object>) args).get("var2"));
            
                // ref
            
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.iflytek.msc.VAD::GetLastSpeechPos(" + var0 + var2 + ")");
                }
            
                // invoke native method
                int result;
                try {
                    result = com.iflytek.msc.VAD.GetLastSpeechPos(var0, var2);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                int jsonableResult = result;
            
                methodResult.success(jsonableResult);
            });
            // method
            put("com.iflytek.msc.AIMIC::loadLibrary", (args, methodResult) -> {
                // args
                // jsonable arg
                String var0 = (String) ((Map<String, Object>) args).get("var0");
            
                // ref
            
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.iflytek.msc.AIMIC::loadLibrary(" + var0 + ")");
                }
            
                // invoke native method
                try {
                    com.iflytek.msc.AIMIC.loadLibrary(var0);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                String jsonableResult = "success";
            
                methodResult.success(jsonableResult);
            });
            // method
            put("com.iflytek.msc.AIMIC::isLoaded", (args, methodResult) -> {
                // args
            
            
                // ref
            
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.iflytek.msc.AIMIC::isLoaded(" + "" + ")");
                }
            
                // invoke native method
                boolean result;
                try {
                    result = com.iflytek.msc.AIMIC.isLoaded();
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                boolean jsonableResult = result;
            
                methodResult.success(jsonableResult);
            });
            // method
            put("com.iflytek.msc.AIMIC::isValid", (args, methodResult) -> {
                // args
            
            
                // ref
            
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.iflytek.msc.AIMIC::isValid(" + "" + ")");
                }
            
                // invoke native method
                boolean result;
                try {
                    result = com.iflytek.msc.AIMIC.isValid();
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                boolean jsonableResult = result;
            
                methodResult.success(jsonableResult);
            });
            // method
            put("com.iflytek.msc.AIMIC::getHandler", (args, methodResult) -> {
                // args
            
            
                // ref
            
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.iflytek.msc.AIMIC::getHandler(" + "" + ")");
                }
            
                // invoke native method
                long result;
                try {
                    result = com.iflytek.msc.AIMIC.getHandler();
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                long jsonableResult = result;
            
                methodResult.success(jsonableResult);
            });
            // method
            put("com.iflytek.msc.AIMIC::AIMICNew", (args, methodResult) -> {
                // args
                // jsonable arg
                byte[] var0 = (byte[]) ((Map<String, Object>) args).get("var0");
            
                // ref
            
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.iflytek.msc.AIMIC::AIMICNew(" + var0 + ")");
                }
            
                // invoke native method
                int result;
                try {
                    result = com.iflytek.msc.AIMIC.AIMICNew(var0, new com.iflytek.msc.AIMIC.Listener() {
                    // method channel
                    MethodChannel callbackChannel = new MethodChannel(messenger, "com.iflytek.msc.AIMIC::AIMICNew::Callback");
            
                    // call dart method
                    @Override
                    public void onWakeupAudio(byte[] var1, int var2, int var3, Object var4) {
                        // print log
                        if (getEnableLog()) {
                            Log.d("java-callback", "fluttify-java-callback: onWakeupAudio(" + var1 + var2 + var3 + var4 + ")");
                        }
            
                        // convert to jsonable data
                        // jsonable arg
                        byte[] argvar1 = var1;
                        // jsonable arg
                        int argvar2 = var2;
                        // jsonable arg
                        int argvar3 = var3;
                        // jsonable arg
                        Object argvar4 = var4;
            
                        // call dart method
                        callbackChannel.invokeMethod(
                                "Callback::com.iflytek.msc.AIMIC.Listener::onWakeupAudio",
                                new HashMap<String, Object>() {{
                                    put("var1", argvar1);
                                    put("var2", argvar2);
                                    put("var3", argvar3);
                                    put("var4", argvar4);
                                }}
                        );
            
                        // method result
            
                    }
            
                    @Override
                    public void onRecogAudio(byte[] var1, int var2, int var3, Object var4) {
                        // print log
                        if (getEnableLog()) {
                            Log.d("java-callback", "fluttify-java-callback: onRecogAudio(" + var1 + var2 + var3 + var4 + ")");
                        }
            
                        // convert to jsonable data
                        // jsonable arg
                        byte[] argvar1 = var1;
                        // jsonable arg
                        int argvar2 = var2;
                        // jsonable arg
                        int argvar3 = var3;
                        // jsonable arg
                        Object argvar4 = var4;
            
                        // call dart method
                        callbackChannel.invokeMethod(
                                "Callback::com.iflytek.msc.AIMIC.Listener::onRecogAudio",
                                new HashMap<String, Object>() {{
                                    put("var1", argvar1);
                                    put("var2", argvar2);
                                    put("var3", argvar3);
                                    put("var4", argvar4);
                                }}
                        );
            
                        // method result
            
                    }
            
                    @Override
                    public void onWakeupMsg(int var1, int var2, int var3, byte[] var4, int var5, byte[] var6, int var7, byte[] var8, int var9) {
                        // print log
                        if (getEnableLog()) {
                            Log.d("java-callback", "fluttify-java-callback: onWakeupMsg(" + var1 + var2 + var3 + var4 + var5 + var6 + var7 + var8 + var9 + ")");
                        }
            
                        // convert to jsonable data
                        // jsonable arg
                        int argvar1 = var1;
                        // jsonable arg
                        int argvar2 = var2;
                        // jsonable arg
                        int argvar3 = var3;
                        // jsonable arg
                        byte[] argvar4 = var4;
                        // jsonable arg
                        int argvar5 = var5;
                        // jsonable arg
                        byte[] argvar6 = var6;
                        // jsonable arg
                        int argvar7 = var7;
                        // jsonable arg
                        byte[] argvar8 = var8;
                        // jsonable arg
                        int argvar9 = var9;
            
                        // call dart method
                        callbackChannel.invokeMethod(
                                "Callback::com.iflytek.msc.AIMIC.Listener::onWakeupMsg",
                                new HashMap<String, Object>() {{
                                    put("var1", argvar1);
                                    put("var2", argvar2);
                                    put("var3", argvar3);
                                    put("var4", argvar4);
                                    put("var5", argvar5);
                                    put("var6", argvar6);
                                    put("var7", argvar7);
                                    put("var8", argvar8);
                                    put("var9", argvar9);
                                }}
                        );
            
                        // method result
            
                    }
            
                });
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                int jsonableResult = result;
            
                methodResult.success(jsonableResult);
            });
            // method
            put("com.iflytek.msc.AIMIC::AIMICAudioWrite", (args, methodResult) -> {
                // args
                // jsonable arg
                long var0 = (long) (int) ((Map<String, Object>) args).get("var0");
                // jsonable arg
                byte[] var2 = (byte[]) ((Map<String, Object>) args).get("var2");
                // jsonable arg
                int var3 = (int) ((Map<String, Object>) args).get("var3");
                // jsonable arg
                int var4 = (int) ((Map<String, Object>) args).get("var4");
            
                // ref
            
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.iflytek.msc.AIMIC::AIMICAudioWrite(" + var0 + var2 + var3 + var4 + ")");
                }
            
                // invoke native method
                int result;
                try {
                    result = com.iflytek.msc.AIMIC.AIMICAudioWrite(var0, var2, var3, var4);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                int jsonableResult = result;
            
                methodResult.success(jsonableResult);
            });
            // method
            put("com.iflytek.msc.AIMIC::AIMICResetEng", (args, methodResult) -> {
                // args
                // jsonable arg
                long var0 = (long) (int) ((Map<String, Object>) args).get("var0");
            
                // ref
            
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.iflytek.msc.AIMIC::AIMICResetEng(" + var0 + ")");
                }
            
                // invoke native method
                int result;
                try {
                    result = com.iflytek.msc.AIMIC.AIMICResetEng(var0);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                int jsonableResult = result;
            
                methodResult.success(jsonableResult);
            });
            // method
            put("com.iflytek.msc.AIMIC::AIMICDestroy", (args, methodResult) -> {
                // args
                // jsonable arg
                long var0 = (long) (int) ((Map<String, Object>) args).get("var0");
            
                // ref
            
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.iflytek.msc.AIMIC::AIMICDestroy(" + var0 + ")");
                }
            
                // invoke native method
                int result;
                try {
                    result = com.iflytek.msc.AIMIC.AIMICDestroy(var0);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                int jsonableResult = result;
            
                methodResult.success(jsonableResult);
            });
            // method
            put("com.iflytek.msc.AIMIC::AIMICSetParam", (args, methodResult) -> {
                // args
                // jsonable arg
                long var0 = (long) (int) ((Map<String, Object>) args).get("var0");
                // jsonable arg
                byte[] var2 = (byte[]) ((Map<String, Object>) args).get("var2");
                // jsonable arg
                byte[] var3 = (byte[]) ((Map<String, Object>) args).get("var3");
            
                // ref
            
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.iflytek.msc.AIMIC::AIMICSetParam(" + var0 + var2 + var3 + ")");
                }
            
                // invoke native method
                int result;
                try {
                    result = com.iflytek.msc.AIMIC.AIMICSetParam(var0, var2, var3);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                int jsonableResult = result;
            
                methodResult.success(jsonableResult);
            });
            // method
            put("com.iflytek.msc.AIMIC::AIMICGetParam", (args, methodResult) -> {
                // args
                // jsonable arg
                long var0 = (long) (int) ((Map<String, Object>) args).get("var0");
                // jsonable arg
                byte[] var2 = (byte[]) ((Map<String, Object>) args).get("var2");
                // jsonable arg
                byte[] var3 = (byte[]) ((Map<String, Object>) args).get("var3");
            
                // ref
            
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.iflytek.msc.AIMIC::AIMICGetParam(" + var0 + var2 + var3 + ")");
                }
            
                // invoke native method
                int result;
                try {
                    result = com.iflytek.msc.AIMIC.AIMICGetParam(var0, var2, var3);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                int jsonableResult = result;
            
                methodResult.success(jsonableResult);
            });
            // method
            put("com.iflytek.msc.AIMIC::AIMICGetVersion", (args, methodResult) -> {
                // args
            
            
                // ref
            
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.iflytek.msc.AIMIC::AIMICGetVersion(" + "" + ")");
                }
            
                // invoke native method
                byte[] result;
                try {
                    result = com.iflytek.msc.AIMIC.AIMICGetVersion();
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                byte[] jsonableResult = result;
            
                methodResult.success(jsonableResult);
            });
            // method
            put("com.iflytek.msc.AIMIC::AIMICDebugLog", (args, methodResult) -> {
                // args
                // jsonable arg
                boolean var0 = (boolean) ((Map<String, Object>) args).get("var0");
                // jsonable arg
                int var1 = (int) ((Map<String, Object>) args).get("var1");
            
                // ref
            
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.iflytek.msc.AIMIC::AIMICDebugLog(" + var0 + var1 + ")");
                }
            
                // invoke native method
                try {
                    com.iflytek.msc.AIMIC.AIMICDebugLog(var0, var1);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                String jsonableResult = "success";
            
                methodResult.success(jsonableResult);
            });
            // method
            put("com.iflytek.msc.AIMIC::AIMICGetChannel", (args, methodResult) -> {
                // args
            
            
                // ref
            
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.iflytek.msc.AIMIC::AIMICGetChannel(" + "" + ")");
                }
            
                // invoke native method
                int result;
                try {
                    result = com.iflytek.msc.AIMIC.AIMICGetChannel();
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                int jsonableResult = result;
            
                methodResult.success(jsonableResult);
            });
            // method
            put("com.iflytek.msc.AIMIC.Listener::onWakeupAudio", (args, methodResult) -> {
                // args
                // jsonable arg
                byte[] var1 = (byte[]) ((Map<String, Object>) args).get("var1");
                // jsonable arg
                int var2 = (int) ((Map<String, Object>) args).get("var2");
                // jsonable arg
                int var3 = (int) ((Map<String, Object>) args).get("var3");
                // jsonable arg
                Object var4 = (Object) ((Map<String, Object>) args).get("var4");
            
                // ref
                int refId = (int) ((Map<String, Object>) args).get("refId");
                com.iflytek.msc.AIMIC.Listener ref = (com.iflytek.msc.AIMIC.Listener) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.iflytek.msc.AIMIC.Listener@" + refId + "::onWakeupAudio(" + var1 + var2 + var3 + var4 + ")");
                }
            
                // invoke native method
                try {
                    ref.onWakeupAudio(var1, var2, var3, var4);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                String jsonableResult = "success";
            
                methodResult.success(jsonableResult);
            });
            // method
            put("com.iflytek.msc.AIMIC.Listener::onRecogAudio", (args, methodResult) -> {
                // args
                // jsonable arg
                byte[] var1 = (byte[]) ((Map<String, Object>) args).get("var1");
                // jsonable arg
                int var2 = (int) ((Map<String, Object>) args).get("var2");
                // jsonable arg
                int var3 = (int) ((Map<String, Object>) args).get("var3");
                // jsonable arg
                Object var4 = (Object) ((Map<String, Object>) args).get("var4");
            
                // ref
                int refId = (int) ((Map<String, Object>) args).get("refId");
                com.iflytek.msc.AIMIC.Listener ref = (com.iflytek.msc.AIMIC.Listener) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.iflytek.msc.AIMIC.Listener@" + refId + "::onRecogAudio(" + var1 + var2 + var3 + var4 + ")");
                }
            
                // invoke native method
                try {
                    ref.onRecogAudio(var1, var2, var3, var4);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                String jsonableResult = "success";
            
                methodResult.success(jsonableResult);
            });
            // method
            put("com.iflytek.msc.AIMIC.Listener::onWakeupMsg", (args, methodResult) -> {
                // args
                // jsonable arg
                int var1 = (int) ((Map<String, Object>) args).get("var1");
                // jsonable arg
                int var2 = (int) ((Map<String, Object>) args).get("var2");
                // jsonable arg
                int var3 = (int) ((Map<String, Object>) args).get("var3");
                // jsonable arg
                byte[] var4 = (byte[]) ((Map<String, Object>) args).get("var4");
                // jsonable arg
                int var5 = (int) ((Map<String, Object>) args).get("var5");
                // jsonable arg
                byte[] var6 = (byte[]) ((Map<String, Object>) args).get("var6");
                // jsonable arg
                int var7 = (int) ((Map<String, Object>) args).get("var7");
                // jsonable arg
                byte[] var8 = (byte[]) ((Map<String, Object>) args).get("var8");
                // jsonable arg
                int var9 = (int) ((Map<String, Object>) args).get("var9");
            
                // ref
                int refId = (int) ((Map<String, Object>) args).get("refId");
                com.iflytek.msc.AIMIC.Listener ref = (com.iflytek.msc.AIMIC.Listener) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.iflytek.msc.AIMIC.Listener@" + refId + "::onWakeupMsg(" + var1 + var2 + var3 + var4 + var5 + var6 + var7 + var8 + var9 + ")");
                }
            
                // invoke native method
                try {
                    ref.onWakeupMsg(var1, var2, var3, var4, var5, var6, var7, var8, var9);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                String jsonableResult = "success";
            
                methodResult.success(jsonableResult);
            });
            // method
            put("com.iflytek.msc.MSC::isIflyVersion", (args, methodResult) -> {
                // args
            
            
                // ref
            
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.iflytek.msc.MSC::isIflyVersion(" + "" + ")");
                }
            
                // invoke native method
                boolean result;
                try {
                    result = com.iflytek.msc.MSC.isIflyVersion();
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                boolean jsonableResult = result;
            
                methodResult.success(jsonableResult);
            });
            // method
            put("com.iflytek.msc.MSC::loadLibrary", (args, methodResult) -> {
                // args
                // jsonable arg
                String var0 = (String) ((Map<String, Object>) args).get("var0");
            
                // ref
            
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.iflytek.msc.MSC::loadLibrary(" + var0 + ")");
                }
            
                // invoke native method
                boolean result;
                try {
                    result = com.iflytek.msc.MSC.loadLibrary(var0);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                boolean jsonableResult = result;
            
                methodResult.success(jsonableResult);
            });
            // method
            put("com.iflytek.msc.MSC::isLoaded", (args, methodResult) -> {
                // args
            
            
                // ref
            
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.iflytek.msc.MSC::isLoaded(" + "" + ")");
                }
            
                // invoke native method
                boolean result;
                try {
                    result = com.iflytek.msc.MSC.isLoaded();
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                boolean jsonableResult = result;
            
                methodResult.success(jsonableResult);
            });
            // method
            put("com.iflytek.msc.MSC::DebugLog", (args, methodResult) -> {
                // args
                // jsonable arg
                boolean var0 = (boolean) ((Map<String, Object>) args).get("var0");
            
                // ref
            
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.iflytek.msc.MSC::DebugLog(" + var0 + ")");
                }
            
                // invoke native method
                int result;
                try {
                    result = com.iflytek.msc.MSC.DebugLog(var0);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                int jsonableResult = result;
            
                methodResult.success(jsonableResult);
            });
            // method
            put("com.iflytek.msc.MSC::SetLogLevel", (args, methodResult) -> {
                // args
                // jsonable arg
                int var0 = (int) ((Map<String, Object>) args).get("var0");
            
                // ref
            
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.iflytek.msc.MSC::SetLogLevel(" + var0 + ")");
                }
            
                // invoke native method
                int result;
                try {
                    result = com.iflytek.msc.MSC.SetLogLevel(var0);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                int jsonableResult = result;
            
                methodResult.success(jsonableResult);
            });
            // method
            put("com.iflytek.msc.MSC::QTTSInit", (args, methodResult) -> {
                // args
                // jsonable arg
                byte[] var0 = (byte[]) ((Map<String, Object>) args).get("var0");
            
                // ref
            
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.iflytek.msc.MSC::QTTSInit(" + var0 + ")");
                }
            
                // invoke native method
                int result;
                try {
                    result = com.iflytek.msc.MSC.QTTSInit(var0);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                int jsonableResult = result;
            
                methodResult.success(jsonableResult);
            });
            // method
            put("com.iflytek.msc.MSC::QTTSFini", (args, methodResult) -> {
                // args
            
            
                // ref
            
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.iflytek.msc.MSC::QTTSFini(" + "" + ")");
                }
            
                // invoke native method
                int result;
                try {
                    result = com.iflytek.msc.MSC.QTTSFini();
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                int jsonableResult = result;
            
                methodResult.success(jsonableResult);
            });
            // method
            put("com.iflytek.msc.MSC::QISRInit", (args, methodResult) -> {
                // args
                // jsonable arg
                byte[] var0 = (byte[]) ((Map<String, Object>) args).get("var0");
            
                // ref
            
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.iflytek.msc.MSC::QISRInit(" + var0 + ")");
                }
            
                // invoke native method
                int result;
                try {
                    result = com.iflytek.msc.MSC.QISRInit(var0);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                int jsonableResult = result;
            
                methodResult.success(jsonableResult);
            });
            // method
            put("com.iflytek.msc.MSC::QISRBuildGrammar", (args, methodResult) -> {
                // args
                // jsonable arg
                byte[] var0 = (byte[]) ((Map<String, Object>) args).get("var0");
                // jsonable arg
                byte[] var1 = (byte[]) ((Map<String, Object>) args).get("var1");
                // jsonable arg
                int var2 = (int) ((Map<String, Object>) args).get("var2");
                // jsonable arg
                byte[] var3 = (byte[]) ((Map<String, Object>) args).get("var3");
                // jsonable arg
                String var4 = (String) ((Map<String, Object>) args).get("var4");
                // jsonable arg
                Object var5 = (Object) ((Map<String, Object>) args).get("var5");
            
                // ref
            
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.iflytek.msc.MSC::QISRBuildGrammar(" + var0 + var1 + var2 + var3 + var4 + var5 + ")");
                }
            
                // invoke native method
                int result;
                try {
                    result = com.iflytek.msc.MSC.QISRBuildGrammar(var0, var1, var2, var3, var4, var5);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                int jsonableResult = result;
            
                methodResult.success(jsonableResult);
            });
            // method
            put("com.iflytek.msc.MSC::QISRUpdateLexicon", (args, methodResult) -> {
                // args
                // jsonable arg
                byte[] var0 = (byte[]) ((Map<String, Object>) args).get("var0");
                // jsonable arg
                byte[] var1 = (byte[]) ((Map<String, Object>) args).get("var1");
                // jsonable arg
                int var2 = (int) ((Map<String, Object>) args).get("var2");
                // jsonable arg
                byte[] var3 = (byte[]) ((Map<String, Object>) args).get("var3");
                // jsonable arg
                String var4 = (String) ((Map<String, Object>) args).get("var4");
                // jsonable arg
                Object var5 = (Object) ((Map<String, Object>) args).get("var5");
            
                // ref
            
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.iflytek.msc.MSC::QISRUpdateLexicon(" + var0 + var1 + var2 + var3 + var4 + var5 + ")");
                }
            
                // invoke native method
                int result;
                try {
                    result = com.iflytek.msc.MSC.QISRUpdateLexicon(var0, var1, var2, var3, var4, var5);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                int jsonableResult = result;
            
                methodResult.success(jsonableResult);
            });
            // method
            put("com.iflytek.msc.MSC::QISRFini", (args, methodResult) -> {
                // args
            
            
                // ref
            
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.iflytek.msc.MSC::QISRFini(" + "" + ")");
                }
            
                // invoke native method
                int result;
                try {
                    result = com.iflytek.msc.MSC.QISRFini();
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                int jsonableResult = result;
            
                methodResult.success(jsonableResult);
            });
            // method
            put("com.iflytek.msc.MSC::QHCRInit", (args, methodResult) -> {
                // args
                // jsonable arg
                byte[] var0 = (byte[]) ((Map<String, Object>) args).get("var0");
            
                // ref
            
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.iflytek.msc.MSC::QHCRInit(" + var0 + ")");
                }
            
                // invoke native method
                int result;
                try {
                    result = com.iflytek.msc.MSC.QHCRInit(var0);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                int jsonableResult = result;
            
                methodResult.success(jsonableResult);
            });
            // method
            put("com.iflytek.msc.MSC::QHCRFini", (args, methodResult) -> {
                // args
            
            
                // ref
            
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.iflytek.msc.MSC::QHCRFini(" + "" + ")");
                }
            
                // invoke native method
                int result;
                try {
                    result = com.iflytek.msc.MSC.QHCRFini();
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                int jsonableResult = result;
            
                methodResult.success(jsonableResult);
            });
            // method
            put("com.iflytek.msc.MSC::QISVInit", (args, methodResult) -> {
                // args
                // jsonable arg
                byte[] var0 = (byte[]) ((Map<String, Object>) args).get("var0");
            
                // ref
            
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.iflytek.msc.MSC::QISVInit(" + var0 + ")");
                }
            
                // invoke native method
                int result;
                try {
                    result = com.iflytek.msc.MSC.QISVInit(var0);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                int jsonableResult = result;
            
                methodResult.success(jsonableResult);
            });
            // method
            put("com.iflytek.msc.MSC::QISVFini", (args, methodResult) -> {
                // args
            
            
                // ref
            
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.iflytek.msc.MSC::QISVFini(" + "" + ")");
                }
            
                // invoke native method
                int result;
                try {
                    result = com.iflytek.msc.MSC.QISVFini();
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                int jsonableResult = result;
            
                methodResult.success(jsonableResult);
            });
            // method
            put("com.iflytek.msc.MSC::QMSPLogin", (args, methodResult) -> {
                // args
                // jsonable arg
                byte[] var0 = (byte[]) ((Map<String, Object>) args).get("var0");
                // jsonable arg
                byte[] var1 = (byte[]) ((Map<String, Object>) args).get("var1");
                // jsonable arg
                byte[] var2 = (byte[]) ((Map<String, Object>) args).get("var2");
            
                // ref
            
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.iflytek.msc.MSC::QMSPLogin(" + var0 + var1 + var2 + ")");
                }
            
                // invoke native method
                int result;
                try {
                    result = com.iflytek.msc.MSC.QMSPLogin(var0, var1, var2);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                int jsonableResult = result;
            
                methodResult.success(jsonableResult);
            });
            // method
            put("com.iflytek.msc.MSC::UMSPLogin", (args, methodResult) -> {
                // args
                // jsonable arg
                byte[] var0 = (byte[]) ((Map<String, Object>) args).get("var0");
                // jsonable arg
                byte[] var1 = (byte[]) ((Map<String, Object>) args).get("var1");
                // jsonable arg
                byte[] var2 = (byte[]) ((Map<String, Object>) args).get("var2");
                // jsonable arg
                Object var3 = (Object) ((Map<String, Object>) args).get("var3");
            
                // ref
            
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.iflytek.msc.MSC::UMSPLogin(" + var0 + var1 + var2 + var3 + ")");
                }
            
                // invoke native method
                int result;
                try {
                    result = com.iflytek.msc.MSC.UMSPLogin(var0, var1, var2, var3);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                int jsonableResult = result;
            
                methodResult.success(jsonableResult);
            });
            // method
            put("com.iflytek.msc.MSC::QMSPSetParam", (args, methodResult) -> {
                // args
                // jsonable arg
                byte[] var0 = (byte[]) ((Map<String, Object>) args).get("var0");
                // jsonable arg
                byte[] var1 = (byte[]) ((Map<String, Object>) args).get("var1");
            
                // ref
            
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.iflytek.msc.MSC::QMSPSetParam(" + var0 + var1 + ")");
                }
            
                // invoke native method
                int result;
                try {
                    result = com.iflytek.msc.MSC.QMSPSetParam(var0, var1);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                int jsonableResult = result;
            
                methodResult.success(jsonableResult);
            });
            // method
            put("com.iflytek.msc.MSC::QMSPGetParam", (args, methodResult) -> {
                // args
                // jsonable arg
                byte[] var0 = (byte[]) ((Map<String, Object>) args).get("var0");
                // ref arg
                com.iflytek.msc.MSCSessionInfo var1 = (com.iflytek.msc.MSCSessionInfo) getHEAP().get((int) ((Map<String, Object>) args).get("var1"));
            
                // ref
            
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.iflytek.msc.MSC::QMSPGetParam(" + var0 + var1 + ")");
                }
            
                // invoke native method
                int result;
                try {
                    result = com.iflytek.msc.MSC.QMSPGetParam(var0, var1);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                int jsonableResult = result;
            
                methodResult.success(jsonableResult);
            });
            // method
            put("com.iflytek.msc.MSC::QMSPUploadData", (args, methodResult) -> {
                // args
                // jsonable arg
                byte[] var0 = (byte[]) ((Map<String, Object>) args).get("var0");
                // jsonable arg
                byte[] var1 = (byte[]) ((Map<String, Object>) args).get("var1");
                // jsonable arg
                int var2 = (int) ((Map<String, Object>) args).get("var2");
                // jsonable arg
                byte[] var3 = (byte[]) ((Map<String, Object>) args).get("var3");
                // ref arg
                com.iflytek.msc.MSCSessionInfo var4 = (com.iflytek.msc.MSCSessionInfo) getHEAP().get((int) ((Map<String, Object>) args).get("var4"));
            
                // ref
            
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.iflytek.msc.MSC::QMSPUploadData(" + var0 + var1 + var2 + var3 + var4 + ")");
                }
            
                // invoke native method
                byte[] result;
                try {
                    result = com.iflytek.msc.MSC.QMSPUploadData(var0, var1, var2, var3, var4);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                byte[] jsonableResult = result;
            
                methodResult.success(jsonableResult);
            });
            // method
            put("com.iflytek.msc.MSC::QMSPDownloadData", (args, methodResult) -> {
                // args
                // jsonable arg
                byte[] var0 = (byte[]) ((Map<String, Object>) args).get("var0");
                // ref arg
                com.iflytek.msc.MSCSessionInfo var1 = (com.iflytek.msc.MSCSessionInfo) getHEAP().get((int) ((Map<String, Object>) args).get("var1"));
            
                // ref
            
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.iflytek.msc.MSC::QMSPDownloadData(" + var0 + var1 + ")");
                }
            
                // invoke native method
                byte[] result;
                try {
                    result = com.iflytek.msc.MSC.QMSPDownloadData(var0, var1);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                byte[] jsonableResult = result;
            
                methodResult.success(jsonableResult);
            });
            // method
            put("com.iflytek.msc.MSC::QMSPDownload", (args, methodResult) -> {
                // args
                // jsonable arg
                byte[] var0 = (byte[]) ((Map<String, Object>) args).get("var0");
                // jsonable arg
                byte[] var1 = (byte[]) ((Map<String, Object>) args).get("var1");
                // jsonable arg
                Object var2 = (Object) ((Map<String, Object>) args).get("var2");
            
                // ref
            
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.iflytek.msc.MSC::QMSPDownload(" + var0 + var1 + var2 + ")");
                }
            
                // invoke native method
                int result;
                try {
                    result = com.iflytek.msc.MSC.QMSPDownload(var0, var1, var2);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                int jsonableResult = result;
            
                methodResult.success(jsonableResult);
            });
            // method
            put("com.iflytek.msc.MSC::QMSPSearch", (args, methodResult) -> {
                // args
                // jsonable arg
                byte[] var0 = (byte[]) ((Map<String, Object>) args).get("var0");
                // jsonable arg
                byte[] var1 = (byte[]) ((Map<String, Object>) args).get("var1");
                // ref arg
                com.iflytek.msc.MSCSessionInfo var2 = (com.iflytek.msc.MSCSessionInfo) getHEAP().get((int) ((Map<String, Object>) args).get("var2"));
            
                // ref
            
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.iflytek.msc.MSC::QMSPSearch(" + var0 + var1 + var2 + ")");
                }
            
                // invoke native method
                byte[] result;
                try {
                    result = com.iflytek.msc.MSC.QMSPSearch(var0, var1, var2);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                byte[] jsonableResult = result;
            
                methodResult.success(jsonableResult);
            });
            // method
            put("com.iflytek.msc.MSC::QMSPLogOut", (args, methodResult) -> {
                // args
            
            
                // ref
            
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.iflytek.msc.MSC::QMSPLogOut(" + "" + ")");
                }
            
                // invoke native method
                int result;
                try {
                    result = com.iflytek.msc.MSC.QMSPLogOut();
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                int jsonableResult = result;
            
                methodResult.success(jsonableResult);
            });
            // method
            put("com.iflytek.msc.MSC::QMSPRegisterNotify", (args, methodResult) -> {
                // args
                // jsonable arg
                String var0 = (String) ((Map<String, Object>) args).get("var0");
                // jsonable arg
                String var1 = (String) ((Map<String, Object>) args).get("var1");
            
                // ref
            
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.iflytek.msc.MSC::QMSPRegisterNotify(" + var0 + var1 + ")");
                }
            
                // invoke native method
                int result;
                try {
                    result = com.iflytek.msc.MSC.QMSPRegisterNotify(var0, var1);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                int jsonableResult = result;
            
                methodResult.success(jsonableResult);
            });
            // method
            put("com.iflytek.msc.MSC::QMSPGetVersion", (args, methodResult) -> {
                // args
                // jsonable arg
                byte[] var0 = (byte[]) ((Map<String, Object>) args).get("var0");
                // ref arg
                com.iflytek.msc.MSCSessionInfo var1 = (com.iflytek.msc.MSCSessionInfo) getHEAP().get((int) ((Map<String, Object>) args).get("var1"));
            
                // ref
            
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.iflytek.msc.MSC::QMSPGetVersion(" + var0 + var1 + ")");
                }
            
                // invoke native method
                byte[] result;
                try {
                    result = com.iflytek.msc.MSC.QMSPGetVersion(var0, var1);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                byte[] jsonableResult = result;
            
                methodResult.success(jsonableResult);
            });
            // method
            put("com.iflytek.msc.MSC::QISEInit", (args, methodResult) -> {
                // args
                // jsonable arg
                byte[] var0 = (byte[]) ((Map<String, Object>) args).get("var0");
            
                // ref
            
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.iflytek.msc.MSC::QISEInit(" + var0 + ")");
                }
            
                // invoke native method
                int result;
                try {
                    result = com.iflytek.msc.MSC.QISEInit(var0);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                int jsonableResult = result;
            
                methodResult.success(jsonableResult);
            });
            // method
            put("com.iflytek.msc.MSC::QISEFini", (args, methodResult) -> {
                // args
            
            
                // ref
            
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.iflytek.msc.MSC::QISEFini(" + "" + ")");
                }
            
                // invoke native method
                int result;
                try {
                    result = com.iflytek.msc.MSC.QISEFini();
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                int jsonableResult = result;
            
                methodResult.success(jsonableResult);
            });
            // method
            put("com.iflytek.msc.MSC::QIVWResMerge", (args, methodResult) -> {
                // args
                // jsonable arg
                byte[] var0 = (byte[]) ((Map<String, Object>) args).get("var0");
                // jsonable arg
                byte[] var1 = (byte[]) ((Map<String, Object>) args).get("var1");
                // jsonable arg
                byte[] var2 = (byte[]) ((Map<String, Object>) args).get("var2");
            
                // ref
            
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.iflytek.msc.MSC::QIVWResMerge(" + var0 + var1 + var2 + ")");
                }
            
                // invoke native method
                int result;
                try {
                    result = com.iflytek.msc.MSC.QIVWResMerge(var0, var1, var2);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                int jsonableResult = result;
            
                methodResult.success(jsonableResult);
            });
            // method
            put("com.iflytek.msc.MSC::QIVWGetResInfo", (args, methodResult) -> {
                // args
                // jsonable arg
                byte[] var0 = (byte[]) ((Map<String, Object>) args).get("var0");
                // jsonable arg
                byte[] var1 = (byte[]) ((Map<String, Object>) args).get("var1");
                // ref arg
                com.iflytek.msc.MSCSessionInfo var2 = (com.iflytek.msc.MSCSessionInfo) getHEAP().get((int) ((Map<String, Object>) args).get("var2"));
            
                // ref
            
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.iflytek.msc.MSC::QIVWGetResInfo(" + var0 + var1 + var2 + ")");
                }
            
                // invoke native method
                int result;
                try {
                    result = com.iflytek.msc.MSC.QIVWGetResInfo(var0, var1, var2);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                int jsonableResult = result;
            
                methodResult.success(jsonableResult);
            });
            // method
            put("com.iflytek.msc.MSC::QIFDInit", (args, methodResult) -> {
                // args
                // jsonable arg
                byte[] var0 = (byte[]) ((Map<String, Object>) args).get("var0");
                // jsonable arg
                Object var1 = (Object) ((Map<String, Object>) args).get("var1");
            
                // ref
            
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.iflytek.msc.MSC::QIFDInit(" + var0 + var1 + ")");
                }
            
                // invoke native method
                try {
                    com.iflytek.msc.MSC.QIFDInit(var0, var1);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                String jsonableResult = "success";
            
                methodResult.success(jsonableResult);
            });
            // method
            put("com.iflytek.msc.MSC::QIFDFacedetect", (args, methodResult) -> {
                // args
                // ref arg
                android.graphics.Bitmap var0 = (android.graphics.Bitmap) getHEAP().get((int) ((Map<String, Object>) args).get("var0"));
                // jsonable arg
                int var1 = (int) ((Map<String, Object>) args).get("var1");
                // jsonable arg
                Object var2 = (Object) ((Map<String, Object>) args).get("var2");
            
                // ref
            
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.iflytek.msc.MSC::QIFDFacedetect(" + var0 + var1 + var2 + ")");
                }
            
                // invoke native method
                byte[] result;
                try {
                    result = com.iflytek.msc.MSC.QIFDFacedetect(var0, var1, var2);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                byte[] jsonableResult = result;
            
                methodResult.success(jsonableResult);
            });
            // method
            put("com.iflytek.msc.MSC::QIFDMultitracker", (args, methodResult) -> {
                // args
                // jsonable arg
                byte[] var0 = (byte[]) ((Map<String, Object>) args).get("var0");
                // jsonable arg
                int var1 = (int) ((Map<String, Object>) args).get("var1");
                // jsonable arg
                int var2 = (int) ((Map<String, Object>) args).get("var2");
                // jsonable arg
                int var3 = (int) ((Map<String, Object>) args).get("var3");
                // jsonable arg
                int var4 = (int) ((Map<String, Object>) args).get("var4");
                // jsonable arg
                int var5 = (int) ((Map<String, Object>) args).get("var5");
                // jsonable arg
                Object var6 = (Object) ((Map<String, Object>) args).get("var6");
            
                // ref
            
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.iflytek.msc.MSC::QIFDMultitracker(" + var0 + var1 + var2 + var3 + var4 + var5 + var6 + ")");
                }
            
                // invoke native method
                byte[] result;
                try {
                    result = com.iflytek.msc.MSC.QIFDMultitracker(var0, var1, var2, var3, var4, var5, var6);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                byte[] jsonableResult = result;
            
                methodResult.success(jsonableResult);
            });
            // method
            put("com.iflytek.msc.MSC::QIFDFini", (args, methodResult) -> {
                // args
            
            
                // ref
            
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.iflytek.msc.MSC::QIFDFini(" + "" + ")");
                }
            
                // invoke native method
                int result;
                try {
                    result = com.iflytek.msc.MSC.QIFDFini();
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                int jsonableResult = result;
            
                methodResult.success(jsonableResult);
            });
            // method
            put("com.iflytek.msc.MSC::doARGB2Gray", (args, methodResult) -> {
                // args
                // ref arg
                android.graphics.Bitmap var0 = (android.graphics.Bitmap) getHEAP().get((int) ((Map<String, Object>) args).get("var0"));
                // ref arg
                android.graphics.Bitmap var1 = (android.graphics.Bitmap) getHEAP().get((int) ((Map<String, Object>) args).get("var1"));
            
                // ref
            
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.iflytek.msc.MSC::doARGB2Gray(" + var0 + var1 + ")");
                }
            
                // invoke native method
                boolean result;
                try {
                    result = com.iflytek.msc.MSC.doARGB2Gray(var0, var1);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                boolean jsonableResult = result;
            
                methodResult.success(jsonableResult);
            });
            // method
            put("com.iflytek.speech.SpeechComponent::getPackageName_batch", (argsBatch, methodResult) -> {
                List<String> resultList = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) argsBatch).size(); __i__++) {
                    Map<String, Object> args = ((List<Map<String, Object>>) argsBatch).get(__i__);
            
                    // args
            
            
                    // ref
                    int refId = (int) ((Map<String, Object>) args).get("refId");
                    com.iflytek.speech.SpeechComponent ref = (com.iflytek.speech.SpeechComponent) getHEAP().get(refId);
            
                    // invoke native method
                    String result;
                    try {
                        result = ref.getPackageName();
                    } catch (Throwable throwable) {
                        throwable.printStackTrace();
                        if (getEnableLog()) {
                            Log.d("Current HEAP: ", getHEAP().toString());
                        }
                        methodResult.error(throwable.getMessage(), null, null);
                        return;
                    }
            
                    // convert result to jsonable result
                    String jsonableResult = result;
            
                    resultList.add(jsonableResult);
                }
            
                methodResult.success(resultList);
            });
            // method
            put("com.iflytek.speech.SpeechComponent::getEngines_batch", (argsBatch, methodResult) -> {
                List<List<String>> resultList = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) argsBatch).size(); __i__++) {
                    Map<String, Object> args = ((List<Map<String, Object>>) argsBatch).get(__i__);
            
                    // args
            
            
                    // ref
                    int refId = (int) ((Map<String, Object>) args).get("refId");
                    com.iflytek.speech.SpeechComponent ref = (com.iflytek.speech.SpeechComponent) getHEAP().get(refId);
            
                    // invoke native method
                    List<String> result;
                    try {
                        result = ref.getEngines();
                    } catch (Throwable throwable) {
                        throwable.printStackTrace();
                        if (getEnableLog()) {
                            Log.d("Current HEAP: ", getHEAP().toString());
                        }
                        methodResult.error(throwable.getMessage(), null, null);
                        return;
                    }
            
                    // convert result to jsonable result
                    List<String> jsonableResult = result;
            
                    resultList.add(jsonableResult);
                }
            
                methodResult.success(resultList);
            });
            // method
            put("com.iflytek.speech.SpeechComponent::addEngine_batch", (argsBatch, methodResult) -> {
                List<String> resultList = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) argsBatch).size(); __i__++) {
                    Map<String, Object> args = ((List<Map<String, Object>>) argsBatch).get(__i__);
            
                    // args
                    // jsonable arg
                    String var1 = (String) ((Map<String, Object>) args).get("var1");
            
                    // ref
                    int refId = (int) ((Map<String, Object>) args).get("refId");
                    com.iflytek.speech.SpeechComponent ref = (com.iflytek.speech.SpeechComponent) getHEAP().get(refId);
            
                    // invoke native method
                    try {
                        ref.addEngine(var1);
                    } catch (Throwable throwable) {
                        throwable.printStackTrace();
                        if (getEnableLog()) {
                            Log.d("Current HEAP: ", getHEAP().toString());
                        }
                        methodResult.error(throwable.getMessage(), null, null);
                        return;
                    }
            
                    // convert result to jsonable result
                    String jsonableResult = "success";
            
                    resultList.add(jsonableResult);
                }
            
                methodResult.success(resultList);
            });
            // method
            put("com.iflytek.speech.SpeechComponent::isEngineAvaible_batch", (argsBatch, methodResult) -> {
                List<Boolean> resultList = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) argsBatch).size(); __i__++) {
                    Map<String, Object> args = ((List<Map<String, Object>>) argsBatch).get(__i__);
            
                    // args
                    // jsonable arg
                    String var1 = (String) ((Map<String, Object>) args).get("var1");
            
                    // ref
                    int refId = (int) ((Map<String, Object>) args).get("refId");
                    com.iflytek.speech.SpeechComponent ref = (com.iflytek.speech.SpeechComponent) getHEAP().get(refId);
            
                    // invoke native method
                    boolean result;
                    try {
                        result = ref.isEngineAvaible(var1);
                    } catch (Throwable throwable) {
                        throwable.printStackTrace();
                        if (getEnableLog()) {
                            Log.d("Current HEAP: ", getHEAP().toString());
                        }
                        methodResult.error(throwable.getMessage(), null, null);
                        return;
                    }
            
                    // convert result to jsonable result
                    boolean jsonableResult = result;
            
                    resultList.add(jsonableResult);
                }
            
                methodResult.success(resultList);
            });
            // method
            put("com.iflytek.speech.SpeakerVerifierAidl::setParameter_batch", (argsBatch, methodResult) -> {
                List<Integer> resultList = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) argsBatch).size(); __i__++) {
                    Map<String, Object> args = ((List<Map<String, Object>>) argsBatch).get(__i__);
            
                    // args
                    // jsonable arg
                    String var1 = (String) ((Map<String, Object>) args).get("var1");
                    // jsonable arg
                    String var2 = (String) ((Map<String, Object>) args).get("var2");
            
                    // ref
                    int refId = (int) ((Map<String, Object>) args).get("refId");
                    com.iflytek.speech.SpeakerVerifierAidl ref = (com.iflytek.speech.SpeakerVerifierAidl) getHEAP().get(refId);
            
                    // invoke native method
                    int result;
                    try {
                        result = ref.setParameter(var1, var2);
                    } catch (Throwable throwable) {
                        throwable.printStackTrace();
                        if (getEnableLog()) {
                            Log.d("Current HEAP: ", getHEAP().toString());
                        }
                        methodResult.error(throwable.getMessage(), null, null);
                        return;
                    }
            
                    // convert result to jsonable result
                    int jsonableResult = result;
            
                    resultList.add(jsonableResult);
                }
            
                methodResult.success(resultList);
            });
            // method
            put("com.iflytek.speech.SpeakerVerifierAidl::getParameter_batch", (argsBatch, methodResult) -> {
                List<String> resultList = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) argsBatch).size(); __i__++) {
                    Map<String, Object> args = ((List<Map<String, Object>>) argsBatch).get(__i__);
            
                    // args
                    // jsonable arg
                    String var1 = (String) ((Map<String, Object>) args).get("var1");
            
                    // ref
                    int refId = (int) ((Map<String, Object>) args).get("refId");
                    com.iflytek.speech.SpeakerVerifierAidl ref = (com.iflytek.speech.SpeakerVerifierAidl) getHEAP().get(refId);
            
                    // invoke native method
                    String result;
                    try {
                        result = ref.getParameter(var1);
                    } catch (Throwable throwable) {
                        throwable.printStackTrace();
                        if (getEnableLog()) {
                            Log.d("Current HEAP: ", getHEAP().toString());
                        }
                        methodResult.error(throwable.getMessage(), null, null);
                        return;
                    }
            
                    // convert result to jsonable result
                    String jsonableResult = result;
            
                    resultList.add(jsonableResult);
                }
            
                methodResult.success(resultList);
            });
            // method
            put("com.iflytek.speech.SpeakerVerifierAidl::endSpeak_batch", (argsBatch, methodResult) -> {
                List<String> resultList = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) argsBatch).size(); __i__++) {
                    Map<String, Object> args = ((List<Map<String, Object>>) argsBatch).get(__i__);
            
                    // args
            
            
                    // ref
                    int refId = (int) ((Map<String, Object>) args).get("refId");
                    com.iflytek.speech.SpeakerVerifierAidl ref = (com.iflytek.speech.SpeakerVerifierAidl) getHEAP().get(refId);
            
                    // invoke native method
                    try {
                        ref.endSpeak();
                    } catch (Throwable throwable) {
                        throwable.printStackTrace();
                        if (getEnableLog()) {
                            Log.d("Current HEAP: ", getHEAP().toString());
                        }
                        methodResult.error(throwable.getMessage(), null, null);
                        return;
                    }
            
                    // convert result to jsonable result
                    String jsonableResult = "success";
            
                    resultList.add(jsonableResult);
                }
            
                methodResult.success(resultList);
            });
            // method
            put("com.iflytek.speech.SpeakerVerifierAidl::stopSpeak_batch", (argsBatch, methodResult) -> {
                List<String> resultList = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) argsBatch).size(); __i__++) {
                    Map<String, Object> args = ((List<Map<String, Object>>) argsBatch).get(__i__);
            
                    // args
            
            
                    // ref
                    int refId = (int) ((Map<String, Object>) args).get("refId");
                    com.iflytek.speech.SpeakerVerifierAidl ref = (com.iflytek.speech.SpeakerVerifierAidl) getHEAP().get(refId);
            
                    // invoke native method
                    try {
                        ref.stopSpeak();
                    } catch (Throwable throwable) {
                        throwable.printStackTrace();
                        if (getEnableLog()) {
                            Log.d("Current HEAP: ", getHEAP().toString());
                        }
                        methodResult.error(throwable.getMessage(), null, null);
                        return;
                    }
            
                    // convert result to jsonable result
                    String jsonableResult = "success";
            
                    resultList.add(jsonableResult);
                }
            
                methodResult.success(resultList);
            });
            // method
            put("com.iflytek.speech.SpeechUnderstanderAidl::isUnderstanding_batch", (argsBatch, methodResult) -> {
                List<Boolean> resultList = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) argsBatch).size(); __i__++) {
                    Map<String, Object> args = ((List<Map<String, Object>>) argsBatch).get(__i__);
            
                    // args
            
            
                    // ref
                    int refId = (int) ((Map<String, Object>) args).get("refId");
                    com.iflytek.speech.SpeechUnderstanderAidl ref = (com.iflytek.speech.SpeechUnderstanderAidl) getHEAP().get(refId);
            
                    // invoke native method
                    boolean result;
                    try {
                        result = ref.isUnderstanding();
                    } catch (Throwable throwable) {
                        throwable.printStackTrace();
                        if (getEnableLog()) {
                            Log.d("Current HEAP: ", getHEAP().toString());
                        }
                        methodResult.error(throwable.getMessage(), null, null);
                        return;
                    }
            
                    // convert result to jsonable result
                    boolean jsonableResult = result;
            
                    resultList.add(jsonableResult);
                }
            
                methodResult.success(resultList);
            });
            // method
            put("com.iflytek.speech.SpeechUnderstanderAidl::setParameter_batch", (argsBatch, methodResult) -> {
                List<Integer> resultList = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) argsBatch).size(); __i__++) {
                    Map<String, Object> args = ((List<Map<String, Object>>) argsBatch).get(__i__);
            
                    // args
                    // jsonable arg
                    String var1 = (String) ((Map<String, Object>) args).get("var1");
                    // jsonable arg
                    String var2 = (String) ((Map<String, Object>) args).get("var2");
            
                    // ref
                    int refId = (int) ((Map<String, Object>) args).get("refId");
                    com.iflytek.speech.SpeechUnderstanderAidl ref = (com.iflytek.speech.SpeechUnderstanderAidl) getHEAP().get(refId);
            
                    // invoke native method
                    int result;
                    try {
                        result = ref.setParameter(var1, var2);
                    } catch (Throwable throwable) {
                        throwable.printStackTrace();
                        if (getEnableLog()) {
                            Log.d("Current HEAP: ", getHEAP().toString());
                        }
                        methodResult.error(throwable.getMessage(), null, null);
                        return;
                    }
            
                    // convert result to jsonable result
                    int jsonableResult = result;
            
                    resultList.add(jsonableResult);
                }
            
                methodResult.success(resultList);
            });
            // method
            put("com.iflytek.speech.SpeechUnderstanderAidl::getParameter_batch", (argsBatch, methodResult) -> {
                List<String> resultList = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) argsBatch).size(); __i__++) {
                    Map<String, Object> args = ((List<Map<String, Object>>) argsBatch).get(__i__);
            
                    // args
                    // jsonable arg
                    String var1 = (String) ((Map<String, Object>) args).get("var1");
            
                    // ref
                    int refId = (int) ((Map<String, Object>) args).get("refId");
                    com.iflytek.speech.SpeechUnderstanderAidl ref = (com.iflytek.speech.SpeechUnderstanderAidl) getHEAP().get(refId);
            
                    // invoke native method
                    String result;
                    try {
                        result = ref.getParameter(var1);
                    } catch (Throwable throwable) {
                        throwable.printStackTrace();
                        if (getEnableLog()) {
                            Log.d("Current HEAP: ", getHEAP().toString());
                        }
                        methodResult.error(throwable.getMessage(), null, null);
                        return;
                    }
            
                    // convert result to jsonable result
                    String jsonableResult = result;
            
                    resultList.add(jsonableResult);
                }
            
                methodResult.success(resultList);
            });
            // method
            put("com.iflytek.speech.SpeechUnderstanderAidl::writeAudio_batch", (argsBatch, methodResult) -> {
                List<Integer> resultList = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) argsBatch).size(); __i__++) {
                    Map<String, Object> args = ((List<Map<String, Object>>) argsBatch).get(__i__);
            
                    // args
                    // jsonable arg
                    byte[] var1 = (byte[]) ((Map<String, Object>) args).get("var1");
                    // jsonable arg
                    int var2 = (int) ((Map<String, Object>) args).get("var2");
                    // jsonable arg
                    int var3 = (int) ((Map<String, Object>) args).get("var3");
            
                    // ref
                    int refId = (int) ((Map<String, Object>) args).get("refId");
                    com.iflytek.speech.SpeechUnderstanderAidl ref = (com.iflytek.speech.SpeechUnderstanderAidl) getHEAP().get(refId);
            
                    // invoke native method
                    int result;
                    try {
                        result = ref.writeAudio(var1, var2, var3);
                    } catch (Throwable throwable) {
                        throwable.printStackTrace();
                        if (getEnableLog()) {
                            Log.d("Current HEAP: ", getHEAP().toString());
                        }
                        methodResult.error(throwable.getMessage(), null, null);
                        return;
                    }
            
                    // convert result to jsonable result
                    int jsonableResult = result;
            
                    resultList.add(jsonableResult);
                }
            
                methodResult.success(resultList);
            });
            // method
            put("com.iflytek.speech.SpeechRecognizerAidl::setParameter_batch", (argsBatch, methodResult) -> {
                List<Integer> resultList = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) argsBatch).size(); __i__++) {
                    Map<String, Object> args = ((List<Map<String, Object>>) argsBatch).get(__i__);
            
                    // args
                    // jsonable arg
                    String var1 = (String) ((Map<String, Object>) args).get("var1");
                    // jsonable arg
                    String var2 = (String) ((Map<String, Object>) args).get("var2");
            
                    // ref
                    int refId = (int) ((Map<String, Object>) args).get("refId");
                    com.iflytek.speech.SpeechRecognizerAidl ref = (com.iflytek.speech.SpeechRecognizerAidl) getHEAP().get(refId);
            
                    // invoke native method
                    int result;
                    try {
                        result = ref.setParameter(var1, var2);
                    } catch (Throwable throwable) {
                        throwable.printStackTrace();
                        if (getEnableLog()) {
                            Log.d("Current HEAP: ", getHEAP().toString());
                        }
                        methodResult.error(throwable.getMessage(), null, null);
                        return;
                    }
            
                    // convert result to jsonable result
                    int jsonableResult = result;
            
                    resultList.add(jsonableResult);
                }
            
                methodResult.success(resultList);
            });
            // method
            put("com.iflytek.speech.SpeechRecognizerAidl::getParameter_batch", (argsBatch, methodResult) -> {
                List<String> resultList = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) argsBatch).size(); __i__++) {
                    Map<String, Object> args = ((List<Map<String, Object>>) argsBatch).get(__i__);
            
                    // args
                    // jsonable arg
                    String var1 = (String) ((Map<String, Object>) args).get("var1");
            
                    // ref
                    int refId = (int) ((Map<String, Object>) args).get("refId");
                    com.iflytek.speech.SpeechRecognizerAidl ref = (com.iflytek.speech.SpeechRecognizerAidl) getHEAP().get(refId);
            
                    // invoke native method
                    String result;
                    try {
                        result = ref.getParameter(var1);
                    } catch (Throwable throwable) {
                        throwable.printStackTrace();
                        if (getEnableLog()) {
                            Log.d("Current HEAP: ", getHEAP().toString());
                        }
                        methodResult.error(throwable.getMessage(), null, null);
                        return;
                    }
            
                    // convert result to jsonable result
                    String jsonableResult = result;
            
                    resultList.add(jsonableResult);
                }
            
                methodResult.success(resultList);
            });
            // method
            put("com.iflytek.speech.SpeechRecognizerAidl::destory_batch", (argsBatch, methodResult) -> {
                List<Boolean> resultList = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) argsBatch).size(); __i__++) {
                    Map<String, Object> args = ((List<Map<String, Object>>) argsBatch).get(__i__);
            
                    // args
            
            
                    // ref
                    int refId = (int) ((Map<String, Object>) args).get("refId");
                    com.iflytek.speech.SpeechRecognizerAidl ref = (com.iflytek.speech.SpeechRecognizerAidl) getHEAP().get(refId);
            
                    // invoke native method
                    boolean result;
                    try {
                        result = ref.destory();
                    } catch (Throwable throwable) {
                        throwable.printStackTrace();
                        if (getEnableLog()) {
                            Log.d("Current HEAP: ", getHEAP().toString());
                        }
                        methodResult.error(throwable.getMessage(), null, null);
                        return;
                    }
            
                    // convert result to jsonable result
                    boolean jsonableResult = result;
            
                    resultList.add(jsonableResult);
                }
            
                methodResult.success(resultList);
            });
            // method
            put("com.iflytek.speech.SpeechRecognizerAidl::isListening_batch", (argsBatch, methodResult) -> {
                List<Boolean> resultList = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) argsBatch).size(); __i__++) {
                    Map<String, Object> args = ((List<Map<String, Object>>) argsBatch).get(__i__);
            
                    // args
            
            
                    // ref
                    int refId = (int) ((Map<String, Object>) args).get("refId");
                    com.iflytek.speech.SpeechRecognizerAidl ref = (com.iflytek.speech.SpeechRecognizerAidl) getHEAP().get(refId);
            
                    // invoke native method
                    boolean result;
                    try {
                        result = ref.isListening();
                    } catch (Throwable throwable) {
                        throwable.printStackTrace();
                        if (getEnableLog()) {
                            Log.d("Current HEAP: ", getHEAP().toString());
                        }
                        methodResult.error(throwable.getMessage(), null, null);
                        return;
                    }
            
                    // convert result to jsonable result
                    boolean jsonableResult = result;
            
                    resultList.add(jsonableResult);
                }
            
                methodResult.success(resultList);
            });
            // method
            put("com.iflytek.speech.SpeechRecognizerAidl::writeAudio_batch", (argsBatch, methodResult) -> {
                List<Integer> resultList = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) argsBatch).size(); __i__++) {
                    Map<String, Object> args = ((List<Map<String, Object>>) argsBatch).get(__i__);
            
                    // args
                    // jsonable arg
                    byte[] var1 = (byte[]) ((Map<String, Object>) args).get("var1");
                    // jsonable arg
                    int var2 = (int) ((Map<String, Object>) args).get("var2");
                    // jsonable arg
                    int var3 = (int) ((Map<String, Object>) args).get("var3");
            
                    // ref
                    int refId = (int) ((Map<String, Object>) args).get("refId");
                    com.iflytek.speech.SpeechRecognizerAidl ref = (com.iflytek.speech.SpeechRecognizerAidl) getHEAP().get(refId);
            
                    // invoke native method
                    int result;
                    try {
                        result = ref.writeAudio(var1, var2, var3);
                    } catch (Throwable throwable) {
                        throwable.printStackTrace();
                        if (getEnableLog()) {
                            Log.d("Current HEAP: ", getHEAP().toString());
                        }
                        methodResult.error(throwable.getMessage(), null, null);
                        return;
                    }
            
                    // convert result to jsonable result
                    int jsonableResult = result;
            
                    resultList.add(jsonableResult);
                }
            
                methodResult.success(resultList);
            });
            // method
            put("com.iflytek.speech.SpeakerVerifierAidl.DownloadListener::onError_batch", (argsBatch, methodResult) -> {
                List<String> resultList = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) argsBatch).size(); __i__++) {
                    Map<String, Object> args = ((List<Map<String, Object>>) argsBatch).get(__i__);
            
                    // args
                    // jsonable arg
                    int var1 = (int) ((Map<String, Object>) args).get("var1");
            
                    // ref
                    int refId = (int) ((Map<String, Object>) args).get("refId");
                    com.iflytek.speech.SpeakerVerifierAidl.DownloadListener ref = (com.iflytek.speech.SpeakerVerifierAidl.DownloadListener) getHEAP().get(refId);
            
                    // invoke native method
                    try {
                        ref.onError(var1);
                    } catch (Throwable throwable) {
                        throwable.printStackTrace();
                        if (getEnableLog()) {
                            Log.d("Current HEAP: ", getHEAP().toString());
                        }
                        methodResult.error(throwable.getMessage(), null, null);
                        return;
                    }
            
                    // convert result to jsonable result
                    String jsonableResult = "success";
            
                    resultList.add(jsonableResult);
                }
            
                methodResult.success(resultList);
            });
            // method
            put("com.iflytek.speech.SpeechSynthesizerAidl::isSpeaking_batch", (argsBatch, methodResult) -> {
                List<Boolean> resultList = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) argsBatch).size(); __i__++) {
                    Map<String, Object> args = ((List<Map<String, Object>>) argsBatch).get(__i__);
            
                    // args
            
            
                    // ref
                    int refId = (int) ((Map<String, Object>) args).get("refId");
                    com.iflytek.speech.SpeechSynthesizerAidl ref = (com.iflytek.speech.SpeechSynthesizerAidl) getHEAP().get(refId);
            
                    // invoke native method
                    boolean result;
                    try {
                        result = ref.isSpeaking();
                    } catch (Throwable throwable) {
                        throwable.printStackTrace();
                        if (getEnableLog()) {
                            Log.d("Current HEAP: ", getHEAP().toString());
                        }
                        methodResult.error(throwable.getMessage(), null, null);
                        return;
                    }
            
                    // convert result to jsonable result
                    boolean jsonableResult = result;
            
                    resultList.add(jsonableResult);
                }
            
                methodResult.success(resultList);
            });
            // method
            put("com.iflytek.speech.SpeechSynthesizerAidl::setParameter_batch", (argsBatch, methodResult) -> {
                List<Integer> resultList = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) argsBatch).size(); __i__++) {
                    Map<String, Object> args = ((List<Map<String, Object>>) argsBatch).get(__i__);
            
                    // args
                    // jsonable arg
                    String var1 = (String) ((Map<String, Object>) args).get("var1");
                    // jsonable arg
                    String var2 = (String) ((Map<String, Object>) args).get("var2");
            
                    // ref
                    int refId = (int) ((Map<String, Object>) args).get("refId");
                    com.iflytek.speech.SpeechSynthesizerAidl ref = (com.iflytek.speech.SpeechSynthesizerAidl) getHEAP().get(refId);
            
                    // invoke native method
                    int result;
                    try {
                        result = ref.setParameter(var1, var2);
                    } catch (Throwable throwable) {
                        throwable.printStackTrace();
                        if (getEnableLog()) {
                            Log.d("Current HEAP: ", getHEAP().toString());
                        }
                        methodResult.error(throwable.getMessage(), null, null);
                        return;
                    }
            
                    // convert result to jsonable result
                    int jsonableResult = result;
            
                    resultList.add(jsonableResult);
                }
            
                methodResult.success(resultList);
            });
            // method
            put("com.iflytek.speech.SpeechSynthesizerAidl::getParameter_batch", (argsBatch, methodResult) -> {
                List<String> resultList = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) argsBatch).size(); __i__++) {
                    Map<String, Object> args = ((List<Map<String, Object>>) argsBatch).get(__i__);
            
                    // args
                    // jsonable arg
                    String var1 = (String) ((Map<String, Object>) args).get("var1");
            
                    // ref
                    int refId = (int) ((Map<String, Object>) args).get("refId");
                    com.iflytek.speech.SpeechSynthesizerAidl ref = (com.iflytek.speech.SpeechSynthesizerAidl) getHEAP().get(refId);
            
                    // invoke native method
                    String result;
                    try {
                        result = ref.getParameter(var1);
                    } catch (Throwable throwable) {
                        throwable.printStackTrace();
                        if (getEnableLog()) {
                            Log.d("Current HEAP: ", getHEAP().toString());
                        }
                        methodResult.error(throwable.getMessage(), null, null);
                        return;
                    }
            
                    // convert result to jsonable result
                    String jsonableResult = result;
            
                    resultList.add(jsonableResult);
                }
            
                methodResult.success(resultList);
            });
            // method
            put("com.iflytek.speech.SpeechSynthesizerAidl::destory_batch", (argsBatch, methodResult) -> {
                List<Boolean> resultList = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) argsBatch).size(); __i__++) {
                    Map<String, Object> args = ((List<Map<String, Object>>) argsBatch).get(__i__);
            
                    // args
            
            
                    // ref
                    int refId = (int) ((Map<String, Object>) args).get("refId");
                    com.iflytek.speech.SpeechSynthesizerAidl ref = (com.iflytek.speech.SpeechSynthesizerAidl) getHEAP().get(refId);
            
                    // invoke native method
                    boolean result;
                    try {
                        result = ref.destory();
                    } catch (Throwable throwable) {
                        throwable.printStackTrace();
                        if (getEnableLog()) {
                            Log.d("Current HEAP: ", getHEAP().toString());
                        }
                        methodResult.error(throwable.getMessage(), null, null);
                        return;
                    }
            
                    // convert result to jsonable result
                    boolean jsonableResult = result;
            
                    resultList.add(jsonableResult);
                }
            
                methodResult.success(resultList);
            });
            // method
            put("com.iflytek.speech.UtilityConfig::getCallerInfo_batch", (argsBatch, methodResult) -> {
                List<String> resultList = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) argsBatch).size(); __i__++) {
                    Map<String, Object> args = ((List<Map<String, Object>>) argsBatch).get(__i__);
            
                    // args
                    // ref arg
                    android.content.Context var0 = (android.content.Context) getHEAP().get((int) ((Map<String, Object>) args).get("var0"));
                    // jsonable arg
                    String var1 = (String) ((Map<String, Object>) args).get("var1");
            
                    // ref
            
            
                    // invoke native method
                    String result;
                    try {
                        result = com.iflytek.speech.UtilityConfig.getCallerInfo(var0, var1);
                    } catch (Throwable throwable) {
                        throwable.printStackTrace();
                        if (getEnableLog()) {
                            Log.d("Current HEAP: ", getHEAP().toString());
                        }
                        methodResult.error(throwable.getMessage(), null, null);
                        return;
                    }
            
                    // convert result to jsonable result
                    String jsonableResult = result;
            
                    resultList.add(jsonableResult);
                }
            
                methodResult.success(resultList);
            });
            // method
            put("com.iflytek.speech.UtilityConfig::getComponentUrlParam_batch", (argsBatch, methodResult) -> {
                List<String> resultList = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) argsBatch).size(); __i__++) {
                    Map<String, Object> args = ((List<Map<String, Object>>) argsBatch).get(__i__);
            
                    // args
                    // ref arg
                    android.content.Context var0 = (android.content.Context) getHEAP().get((int) ((Map<String, Object>) args).get("var0"));
            
                    // ref
            
            
                    // invoke native method
                    String result;
                    try {
                        result = com.iflytek.speech.UtilityConfig.getComponentUrlParam(var0);
                    } catch (Throwable throwable) {
                        throwable.printStackTrace();
                        if (getEnableLog()) {
                            Log.d("Current HEAP: ", getHEAP().toString());
                        }
                        methodResult.error(throwable.getMessage(), null, null);
                        return;
                    }
            
                    // convert result to jsonable result
                    String jsonableResult = result;
            
                    resultList.add(jsonableResult);
                }
            
                methodResult.success(resultList);
            });
            // method
            put("com.iflytek.speech.ISpeechModule::setParameter_batch", (argsBatch, methodResult) -> {
                List<Integer> resultList = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) argsBatch).size(); __i__++) {
                    Map<String, Object> args = ((List<Map<String, Object>>) argsBatch).get(__i__);
            
                    // args
                    // jsonable arg
                    String var1 = (String) ((Map<String, Object>) args).get("var1");
                    // jsonable arg
                    String var2 = (String) ((Map<String, Object>) args).get("var2");
            
                    // ref
                    int refId = (int) ((Map<String, Object>) args).get("refId");
                    com.iflytek.speech.ISpeechModule ref = (com.iflytek.speech.ISpeechModule) getHEAP().get(refId);
            
                    // invoke native method
                    int result;
                    try {
                        result = ref.setParameter(var1, var2);
                    } catch (Throwable throwable) {
                        throwable.printStackTrace();
                        if (getEnableLog()) {
                            Log.d("Current HEAP: ", getHEAP().toString());
                        }
                        methodResult.error(throwable.getMessage(), null, null);
                        return;
                    }
            
                    // convert result to jsonable result
                    int jsonableResult = result;
            
                    resultList.add(jsonableResult);
                }
            
                methodResult.success(resultList);
            });
            // method
            put("com.iflytek.speech.ISpeechModule::getParameter_batch", (argsBatch, methodResult) -> {
                List<String> resultList = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) argsBatch).size(); __i__++) {
                    Map<String, Object> args = ((List<Map<String, Object>>) argsBatch).get(__i__);
            
                    // args
                    // jsonable arg
                    String var1 = (String) ((Map<String, Object>) args).get("var1");
            
                    // ref
                    int refId = (int) ((Map<String, Object>) args).get("refId");
                    com.iflytek.speech.ISpeechModule ref = (com.iflytek.speech.ISpeechModule) getHEAP().get(refId);
            
                    // invoke native method
                    String result;
                    try {
                        result = ref.getParameter(var1);
                    } catch (Throwable throwable) {
                        throwable.printStackTrace();
                        if (getEnableLog()) {
                            Log.d("Current HEAP: ", getHEAP().toString());
                        }
                        methodResult.error(throwable.getMessage(), null, null);
                        return;
                    }
            
                    // convert result to jsonable result
                    String jsonableResult = result;
            
                    resultList.add(jsonableResult);
                }
            
                methodResult.success(resultList);
            });
            // method
            put("com.iflytek.speech.ISpeechModule::getIntent_batch", (argsBatch, methodResult) -> {
                List<Integer> resultList = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) argsBatch).size(); __i__++) {
                    Map<String, Object> args = ((List<Map<String, Object>>) argsBatch).get(__i__);
            
                    // args
            
            
                    // ref
                    int refId = (int) ((Map<String, Object>) args).get("refId");
                    com.iflytek.speech.ISpeechModule ref = (com.iflytek.speech.ISpeechModule) getHEAP().get(refId);
            
                    // invoke native method
                    android.content.Intent result;
                    try {
                        result = ref.getIntent();
                    } catch (Throwable throwable) {
                        throwable.printStackTrace();
                        if (getEnableLog()) {
                            Log.d("Current HEAP: ", getHEAP().toString());
                        }
                        methodResult.error(throwable.getMessage(), null, null);
                        return;
                    }
            
                    // convert result to jsonable result
                    Integer jsonableResult = null;
                    if (result != null) {
                        jsonableResult = System.identityHashCode(result);
                        getHEAP().put(jsonableResult, result);
                    }
            
                    resultList.add(jsonableResult);
                }
            
                methodResult.success(resultList);
            });
            // method
            put("com.iflytek.speech.ISpeechModule::destory_batch", (argsBatch, methodResult) -> {
                List<Boolean> resultList = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) argsBatch).size(); __i__++) {
                    Map<String, Object> args = ((List<Map<String, Object>>) argsBatch).get(__i__);
            
                    // args
            
            
                    // ref
                    int refId = (int) ((Map<String, Object>) args).get("refId");
                    com.iflytek.speech.ISpeechModule ref = (com.iflytek.speech.ISpeechModule) getHEAP().get(refId);
            
                    // invoke native method
                    boolean result;
                    try {
                        result = ref.destory();
                    } catch (Throwable throwable) {
                        throwable.printStackTrace();
                        if (getEnableLog()) {
                            Log.d("Current HEAP: ", getHEAP().toString());
                        }
                        methodResult.error(throwable.getMessage(), null, null);
                        return;
                    }
            
                    // convert result to jsonable result
                    boolean jsonableResult = result;
            
                    resultList.add(jsonableResult);
                }
            
                methodResult.success(resultList);
            });
            // method
            put("com.iflytek.speech.ISpeechModule::isAvailable_batch", (argsBatch, methodResult) -> {
                List<Boolean> resultList = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) argsBatch).size(); __i__++) {
                    Map<String, Object> args = ((List<Map<String, Object>>) argsBatch).get(__i__);
            
                    // args
            
            
                    // ref
                    int refId = (int) ((Map<String, Object>) args).get("refId");
                    com.iflytek.speech.ISpeechModule ref = (com.iflytek.speech.ISpeechModule) getHEAP().get(refId);
            
                    // invoke native method
                    boolean result;
                    try {
                        result = ref.isAvailable();
                    } catch (Throwable throwable) {
                        throwable.printStackTrace();
                        if (getEnableLog()) {
                            Log.d("Current HEAP: ", getHEAP().toString());
                        }
                        methodResult.error(throwable.getMessage(), null, null);
                        return;
                    }
            
                    // convert result to jsonable result
                    boolean jsonableResult = result;
            
                    resultList.add(jsonableResult);
                }
            
                methodResult.success(resultList);
            });
            // method
            put("com.iflytek.speech.WakeuperResult::getResultString_batch", (argsBatch, methodResult) -> {
                List<String> resultList = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) argsBatch).size(); __i__++) {
                    Map<String, Object> args = ((List<Map<String, Object>>) argsBatch).get(__i__);
            
                    // args
            
            
                    // ref
                    int refId = (int) ((Map<String, Object>) args).get("refId");
                    com.iflytek.speech.WakeuperResult ref = (com.iflytek.speech.WakeuperResult) getHEAP().get(refId);
            
                    // invoke native method
                    String result;
                    try {
                        result = ref.getResultString();
                    } catch (Throwable throwable) {
                        throwable.printStackTrace();
                        if (getEnableLog()) {
                            Log.d("Current HEAP: ", getHEAP().toString());
                        }
                        methodResult.error(throwable.getMessage(), null, null);
                        return;
                    }
            
                    // convert result to jsonable result
                    String jsonableResult = result;
            
                    resultList.add(jsonableResult);
                }
            
                methodResult.success(resultList);
            });
            // method
            put("com.iflytek.speech.VerifierResult::getResultString_batch", (argsBatch, methodResult) -> {
                List<String> resultList = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) argsBatch).size(); __i__++) {
                    Map<String, Object> args = ((List<Map<String, Object>>) argsBatch).get(__i__);
            
                    // args
            
            
                    // ref
                    int refId = (int) ((Map<String, Object>) args).get("refId");
                    com.iflytek.speech.VerifierResult ref = (com.iflytek.speech.VerifierResult) getHEAP().get(refId);
            
                    // invoke native method
                    String result;
                    try {
                        result = ref.getResultString();
                    } catch (Throwable throwable) {
                        throwable.printStackTrace();
                        if (getEnableLog()) {
                            Log.d("Current HEAP: ", getHEAP().toString());
                        }
                        methodResult.error(throwable.getMessage(), null, null);
                        return;
                    }
            
                    // convert result to jsonable result
                    String jsonableResult = result;
            
                    resultList.add(jsonableResult);
                }
            
                methodResult.success(resultList);
            });
            // method
            put("com.iflytek.speech.RecognizerResult::getResultString_batch", (argsBatch, methodResult) -> {
                List<String> resultList = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) argsBatch).size(); __i__++) {
                    Map<String, Object> args = ((List<Map<String, Object>>) argsBatch).get(__i__);
            
                    // args
            
            
                    // ref
                    int refId = (int) ((Map<String, Object>) args).get("refId");
                    com.iflytek.speech.RecognizerResult ref = (com.iflytek.speech.RecognizerResult) getHEAP().get(refId);
            
                    // invoke native method
                    String result;
                    try {
                        result = ref.getResultString();
                    } catch (Throwable throwable) {
                        throwable.printStackTrace();
                        if (getEnableLog()) {
                            Log.d("Current HEAP: ", getHEAP().toString());
                        }
                        methodResult.error(throwable.getMessage(), null, null);
                        return;
                    }
            
                    // convert result to jsonable result
                    String jsonableResult = result;
            
                    resultList.add(jsonableResult);
                }
            
                methodResult.success(resultList);
            });
            // method
            put("com.iflytek.speech.Version::getVersionName_batch", (argsBatch, methodResult) -> {
                List<String> resultList = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) argsBatch).size(); __i__++) {
                    Map<String, Object> args = ((List<Map<String, Object>>) argsBatch).get(__i__);
            
                    // args
            
            
                    // ref
            
            
                    // invoke native method
                    String result;
                    try {
                        result = com.iflytek.speech.Version.getVersionName();
                    } catch (Throwable throwable) {
                        throwable.printStackTrace();
                        if (getEnableLog()) {
                            Log.d("Current HEAP: ", getHEAP().toString());
                        }
                        methodResult.error(throwable.getMessage(), null, null);
                        return;
                    }
            
                    // convert result to jsonable result
                    String jsonableResult = result;
            
                    resultList.add(jsonableResult);
                }
            
                methodResult.success(resultList);
            });
            // method
            put("com.iflytek.speech.Version::getVersionCode_batch", (argsBatch, methodResult) -> {
                List<String> resultList = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) argsBatch).size(); __i__++) {
                    Map<String, Object> args = ((List<Map<String, Object>>) argsBatch).get(__i__);
            
                    // args
            
            
                    // ref
            
            
                    // invoke native method
                    String result;
                    try {
                        result = com.iflytek.speech.Version.getVersionCode();
                    } catch (Throwable throwable) {
                        throwable.printStackTrace();
                        if (getEnableLog()) {
                            Log.d("Current HEAP: ", getHEAP().toString());
                        }
                        methodResult.error(throwable.getMessage(), null, null);
                        return;
                    }
            
                    // convert result to jsonable result
                    String jsonableResult = result;
            
                    resultList.add(jsonableResult);
                }
            
                methodResult.success(resultList);
            });
            // method
            put("com.iflytek.speech.TextUnderstanderAidl::isUnderstanding_batch", (argsBatch, methodResult) -> {
                List<Boolean> resultList = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) argsBatch).size(); __i__++) {
                    Map<String, Object> args = ((List<Map<String, Object>>) argsBatch).get(__i__);
            
                    // args
            
            
                    // ref
                    int refId = (int) ((Map<String, Object>) args).get("refId");
                    com.iflytek.speech.TextUnderstanderAidl ref = (com.iflytek.speech.TextUnderstanderAidl) getHEAP().get(refId);
            
                    // invoke native method
                    boolean result;
                    try {
                        result = ref.isUnderstanding();
                    } catch (Throwable throwable) {
                        throwable.printStackTrace();
                        if (getEnableLog()) {
                            Log.d("Current HEAP: ", getHEAP().toString());
                        }
                        methodResult.error(throwable.getMessage(), null, null);
                        return;
                    }
            
                    // convert result to jsonable result
                    boolean jsonableResult = result;
            
                    resultList.add(jsonableResult);
                }
            
                methodResult.success(resultList);
            });
            // method
            put("com.iflytek.speech.TextUnderstanderAidl::setParameter_batch", (argsBatch, methodResult) -> {
                List<Integer> resultList = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) argsBatch).size(); __i__++) {
                    Map<String, Object> args = ((List<Map<String, Object>>) argsBatch).get(__i__);
            
                    // args
                    // jsonable arg
                    String var1 = (String) ((Map<String, Object>) args).get("var1");
                    // jsonable arg
                    String var2 = (String) ((Map<String, Object>) args).get("var2");
            
                    // ref
                    int refId = (int) ((Map<String, Object>) args).get("refId");
                    com.iflytek.speech.TextUnderstanderAidl ref = (com.iflytek.speech.TextUnderstanderAidl) getHEAP().get(refId);
            
                    // invoke native method
                    int result;
                    try {
                        result = ref.setParameter(var1, var2);
                    } catch (Throwable throwable) {
                        throwable.printStackTrace();
                        if (getEnableLog()) {
                            Log.d("Current HEAP: ", getHEAP().toString());
                        }
                        methodResult.error(throwable.getMessage(), null, null);
                        return;
                    }
            
                    // convert result to jsonable result
                    int jsonableResult = result;
            
                    resultList.add(jsonableResult);
                }
            
                methodResult.success(resultList);
            });
            // method
            put("com.iflytek.speech.TextUnderstanderAidl::getParameter_batch", (argsBatch, methodResult) -> {
                List<String> resultList = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) argsBatch).size(); __i__++) {
                    Map<String, Object> args = ((List<Map<String, Object>>) argsBatch).get(__i__);
            
                    // args
                    // jsonable arg
                    String var1 = (String) ((Map<String, Object>) args).get("var1");
            
                    // ref
                    int refId = (int) ((Map<String, Object>) args).get("refId");
                    com.iflytek.speech.TextUnderstanderAidl ref = (com.iflytek.speech.TextUnderstanderAidl) getHEAP().get(refId);
            
                    // invoke native method
                    String result;
                    try {
                        result = ref.getParameter(var1);
                    } catch (Throwable throwable) {
                        throwable.printStackTrace();
                        if (getEnableLog()) {
                            Log.d("Current HEAP: ", getHEAP().toString());
                        }
                        methodResult.error(throwable.getMessage(), null, null);
                        return;
                    }
            
                    // convert result to jsonable result
                    String jsonableResult = result;
            
                    resultList.add(jsonableResult);
                }
            
                methodResult.success(resultList);
            });
            // method
            put("com.iflytek.speech.UnderstanderResult::getResultString_batch", (argsBatch, methodResult) -> {
                List<String> resultList = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) argsBatch).size(); __i__++) {
                    Map<String, Object> args = ((List<Map<String, Object>>) argsBatch).get(__i__);
            
                    // args
            
            
                    // ref
                    int refId = (int) ((Map<String, Object>) args).get("refId");
                    com.iflytek.speech.UnderstanderResult ref = (com.iflytek.speech.UnderstanderResult) getHEAP().get(refId);
            
                    // invoke native method
                    String result;
                    try {
                        result = ref.getResultString();
                    } catch (Throwable throwable) {
                        throwable.printStackTrace();
                        if (getEnableLog()) {
                            Log.d("Current HEAP: ", getHEAP().toString());
                        }
                        methodResult.error(throwable.getMessage(), null, null);
                        return;
                    }
            
                    // convert result to jsonable result
                    String jsonableResult = result;
            
                    resultList.add(jsonableResult);
                }
            
                methodResult.success(resultList);
            });
            // method
            put("com.iflytek.speech.VoiceWakeuperAidl::destroy_batch", (argsBatch, methodResult) -> {
                List<Boolean> resultList = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) argsBatch).size(); __i__++) {
                    Map<String, Object> args = ((List<Map<String, Object>>) argsBatch).get(__i__);
            
                    // args
            
            
                    // ref
                    int refId = (int) ((Map<String, Object>) args).get("refId");
                    com.iflytek.speech.VoiceWakeuperAidl ref = (com.iflytek.speech.VoiceWakeuperAidl) getHEAP().get(refId);
            
                    // invoke native method
                    boolean result;
                    try {
                        result = ref.destroy();
                    } catch (Throwable throwable) {
                        throwable.printStackTrace();
                        if (getEnableLog()) {
                            Log.d("Current HEAP: ", getHEAP().toString());
                        }
                        methodResult.error(throwable.getMessage(), null, null);
                        return;
                    }
            
                    // convert result to jsonable result
                    boolean jsonableResult = result;
            
                    resultList.add(jsonableResult);
                }
            
                methodResult.success(resultList);
            });
            // method
            put("com.iflytek.speech.VoiceWakeuperAidl::isListening_batch", (argsBatch, methodResult) -> {
                List<Boolean> resultList = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) argsBatch).size(); __i__++) {
                    Map<String, Object> args = ((List<Map<String, Object>>) argsBatch).get(__i__);
            
                    // args
            
            
                    // ref
                    int refId = (int) ((Map<String, Object>) args).get("refId");
                    com.iflytek.speech.VoiceWakeuperAidl ref = (com.iflytek.speech.VoiceWakeuperAidl) getHEAP().get(refId);
            
                    // invoke native method
                    boolean result;
                    try {
                        result = ref.isListening();
                    } catch (Throwable throwable) {
                        throwable.printStackTrace();
                        if (getEnableLog()) {
                            Log.d("Current HEAP: ", getHEAP().toString());
                        }
                        methodResult.error(throwable.getMessage(), null, null);
                        return;
                    }
            
                    // convert result to jsonable result
                    boolean jsonableResult = result;
            
                    resultList.add(jsonableResult);
                }
            
                methodResult.success(resultList);
            });
            // method
            put("com.iflytek.speech.VoiceWakeuperAidl::setParameter_batch", (argsBatch, methodResult) -> {
                List<Integer> resultList = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) argsBatch).size(); __i__++) {
                    Map<String, Object> args = ((List<Map<String, Object>>) argsBatch).get(__i__);
            
                    // args
                    // jsonable arg
                    String var1 = (String) ((Map<String, Object>) args).get("var1");
                    // jsonable arg
                    String var2 = (String) ((Map<String, Object>) args).get("var2");
            
                    // ref
                    int refId = (int) ((Map<String, Object>) args).get("refId");
                    com.iflytek.speech.VoiceWakeuperAidl ref = (com.iflytek.speech.VoiceWakeuperAidl) getHEAP().get(refId);
            
                    // invoke native method
                    int result;
                    try {
                        result = ref.setParameter(var1, var2);
                    } catch (Throwable throwable) {
                        throwable.printStackTrace();
                        if (getEnableLog()) {
                            Log.d("Current HEAP: ", getHEAP().toString());
                        }
                        methodResult.error(throwable.getMessage(), null, null);
                        return;
                    }
            
                    // convert result to jsonable result
                    int jsonableResult = result;
            
                    resultList.add(jsonableResult);
                }
            
                methodResult.success(resultList);
            });
            // method
            put("com.iflytek.speech.VoiceWakeuperAidl::getParameter_batch", (argsBatch, methodResult) -> {
                List<String> resultList = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) argsBatch).size(); __i__++) {
                    Map<String, Object> args = ((List<Map<String, Object>>) argsBatch).get(__i__);
            
                    // args
                    // jsonable arg
                    String var1 = (String) ((Map<String, Object>) args).get("var1");
            
                    // ref
                    int refId = (int) ((Map<String, Object>) args).get("refId");
                    com.iflytek.speech.VoiceWakeuperAidl ref = (com.iflytek.speech.VoiceWakeuperAidl) getHEAP().get(refId);
            
                    // invoke native method
                    String result;
                    try {
                        result = ref.getParameter(var1);
                    } catch (Throwable throwable) {
                        throwable.printStackTrace();
                        if (getEnableLog()) {
                            Log.d("Current HEAP: ", getHEAP().toString());
                        }
                        methodResult.error(throwable.getMessage(), null, null);
                        return;
                    }
            
                    // convert result to jsonable result
                    String jsonableResult = result;
            
                    resultList.add(jsonableResult);
                }
            
                methodResult.success(resultList);
            });
            // method
            put("com.iflytek.cloud.VerifierListener::onVolumeChanged_batch", (argsBatch, methodResult) -> {
                List<String> resultList = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) argsBatch).size(); __i__++) {
                    Map<String, Object> args = ((List<Map<String, Object>>) argsBatch).get(__i__);
            
                    // args
                    // jsonable arg
                    int var1 = (int) ((Map<String, Object>) args).get("var1");
                    // jsonable arg
                    byte[] var2 = (byte[]) ((Map<String, Object>) args).get("var2");
            
                    // ref
                    int refId = (int) ((Map<String, Object>) args).get("refId");
                    com.iflytek.cloud.VerifierListener ref = (com.iflytek.cloud.VerifierListener) getHEAP().get(refId);
            
                    // invoke native method
                    try {
                        ref.onVolumeChanged(var1, var2);
                    } catch (Throwable throwable) {
                        throwable.printStackTrace();
                        if (getEnableLog()) {
                            Log.d("Current HEAP: ", getHEAP().toString());
                        }
                        methodResult.error(throwable.getMessage(), null, null);
                        return;
                    }
            
                    // convert result to jsonable result
                    String jsonableResult = "success";
            
                    resultList.add(jsonableResult);
                }
            
                methodResult.success(resultList);
            });
            // method
            put("com.iflytek.cloud.VerifierListener::onBeginOfSpeech_batch", (argsBatch, methodResult) -> {
                List<String> resultList = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) argsBatch).size(); __i__++) {
                    Map<String, Object> args = ((List<Map<String, Object>>) argsBatch).get(__i__);
            
                    // args
            
            
                    // ref
                    int refId = (int) ((Map<String, Object>) args).get("refId");
                    com.iflytek.cloud.VerifierListener ref = (com.iflytek.cloud.VerifierListener) getHEAP().get(refId);
            
                    // invoke native method
                    try {
                        ref.onBeginOfSpeech();
                    } catch (Throwable throwable) {
                        throwable.printStackTrace();
                        if (getEnableLog()) {
                            Log.d("Current HEAP: ", getHEAP().toString());
                        }
                        methodResult.error(throwable.getMessage(), null, null);
                        return;
                    }
            
                    // convert result to jsonable result
                    String jsonableResult = "success";
            
                    resultList.add(jsonableResult);
                }
            
                methodResult.success(resultList);
            });
            // method
            put("com.iflytek.cloud.VerifierListener::onEndOfSpeech_batch", (argsBatch, methodResult) -> {
                List<String> resultList = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) argsBatch).size(); __i__++) {
                    Map<String, Object> args = ((List<Map<String, Object>>) argsBatch).get(__i__);
            
                    // args
            
            
                    // ref
                    int refId = (int) ((Map<String, Object>) args).get("refId");
                    com.iflytek.cloud.VerifierListener ref = (com.iflytek.cloud.VerifierListener) getHEAP().get(refId);
            
                    // invoke native method
                    try {
                        ref.onEndOfSpeech();
                    } catch (Throwable throwable) {
                        throwable.printStackTrace();
                        if (getEnableLog()) {
                            Log.d("Current HEAP: ", getHEAP().toString());
                        }
                        methodResult.error(throwable.getMessage(), null, null);
                        return;
                    }
            
                    // convert result to jsonable result
                    String jsonableResult = "success";
            
                    resultList.add(jsonableResult);
                }
            
                methodResult.success(resultList);
            });
            // method
            put("com.iflytek.cloud.VerifierListener::onResult_batch", (argsBatch, methodResult) -> {
                List<String> resultList = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) argsBatch).size(); __i__++) {
                    Map<String, Object> args = ((List<Map<String, Object>>) argsBatch).get(__i__);
            
                    // args
                    // ref arg
                    com.iflytek.cloud.VerifierResult var1 = (com.iflytek.cloud.VerifierResult) getHEAP().get((int) ((Map<String, Object>) args).get("var1"));
            
                    // ref
                    int refId = (int) ((Map<String, Object>) args).get("refId");
                    com.iflytek.cloud.VerifierListener ref = (com.iflytek.cloud.VerifierListener) getHEAP().get(refId);
            
                    // invoke native method
                    try {
                        ref.onResult(var1);
                    } catch (Throwable throwable) {
                        throwable.printStackTrace();
                        if (getEnableLog()) {
                            Log.d("Current HEAP: ", getHEAP().toString());
                        }
                        methodResult.error(throwable.getMessage(), null, null);
                        return;
                    }
            
                    // convert result to jsonable result
                    String jsonableResult = "success";
            
                    resultList.add(jsonableResult);
                }
            
                methodResult.success(resultList);
            });
            // method
            put("com.iflytek.cloud.VerifierListener::onError_batch", (argsBatch, methodResult) -> {
                List<String> resultList = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) argsBatch).size(); __i__++) {
                    Map<String, Object> args = ((List<Map<String, Object>>) argsBatch).get(__i__);
            
                    // args
                    // ref arg
                    com.iflytek.cloud.SpeechError var1 = (com.iflytek.cloud.SpeechError) getHEAP().get((int) ((Map<String, Object>) args).get("var1"));
            
                    // ref
                    int refId = (int) ((Map<String, Object>) args).get("refId");
                    com.iflytek.cloud.VerifierListener ref = (com.iflytek.cloud.VerifierListener) getHEAP().get(refId);
            
                    // invoke native method
                    try {
                        ref.onError(var1);
                    } catch (Throwable throwable) {
                        throwable.printStackTrace();
                        if (getEnableLog()) {
                            Log.d("Current HEAP: ", getHEAP().toString());
                        }
                        methodResult.error(throwable.getMessage(), null, null);
                        return;
                    }
            
                    // convert result to jsonable result
                    String jsonableResult = "success";
            
                    resultList.add(jsonableResult);
                }
            
                methodResult.success(resultList);
            });
            // method
            put("com.iflytek.cloud.VerifierListener::onEvent_batch", (argsBatch, methodResult) -> {
                List<String> resultList = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) argsBatch).size(); __i__++) {
                    Map<String, Object> args = ((List<Map<String, Object>>) argsBatch).get(__i__);
            
                    // args
                    // jsonable arg
                    int var1 = (int) ((Map<String, Object>) args).get("var1");
                    // jsonable arg
                    int var2 = (int) ((Map<String, Object>) args).get("var2");
                    // jsonable arg
                    int var3 = (int) ((Map<String, Object>) args).get("var3");
                    // ref arg
                    android.os.Bundle var4 = (android.os.Bundle) getHEAP().get((int) ((Map<String, Object>) args).get("var4"));
            
                    // ref
                    int refId = (int) ((Map<String, Object>) args).get("refId");
                    com.iflytek.cloud.VerifierListener ref = (com.iflytek.cloud.VerifierListener) getHEAP().get(refId);
            
                    // invoke native method
                    try {
                        ref.onEvent(var1, var2, var3, var4);
                    } catch (Throwable throwable) {
                        throwable.printStackTrace();
                        if (getEnableLog()) {
                            Log.d("Current HEAP: ", getHEAP().toString());
                        }
                        methodResult.error(throwable.getMessage(), null, null);
                        return;
                    }
            
                    // convert result to jsonable result
                    String jsonableResult = "success";
            
                    resultList.add(jsonableResult);
                }
            
                methodResult.success(resultList);
            });
            // method
            put("com.iflytek.cloud.SpeakerVerifier::getVerifier_batch", (argsBatch, methodResult) -> {
                List<Integer> resultList = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) argsBatch).size(); __i__++) {
                    Map<String, Object> args = ((List<Map<String, Object>>) argsBatch).get(__i__);
            
                    // args
            
            
                    // ref
            
            
                    // invoke native method
                    com.iflytek.cloud.SpeakerVerifier result;
                    try {
                        result = com.iflytek.cloud.SpeakerVerifier.getVerifier();
                    } catch (Throwable throwable) {
                        throwable.printStackTrace();
                        if (getEnableLog()) {
                            Log.d("Current HEAP: ", getHEAP().toString());
                        }
                        methodResult.error(throwable.getMessage(), null, null);
                        return;
                    }
            
                    // convert result to jsonable result
                    Integer jsonableResult = null;
                    if (result != null) {
                        jsonableResult = System.identityHashCode(result);
                        getHEAP().put(jsonableResult, result);
                    }
            
                    resultList.add(jsonableResult);
                }
            
                methodResult.success(resultList);
            });
            // method
            put("com.iflytek.cloud.SpeakerVerifier::generatePassword_batch", (argsBatch, methodResult) -> {
                List<String> resultList = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) argsBatch).size(); __i__++) {
                    Map<String, Object> args = ((List<Map<String, Object>>) argsBatch).get(__i__);
            
                    // args
                    // jsonable arg
                    int var1 = (int) ((Map<String, Object>) args).get("var1");
            
                    // ref
                    int refId = (int) ((Map<String, Object>) args).get("refId");
                    com.iflytek.cloud.SpeakerVerifier ref = (com.iflytek.cloud.SpeakerVerifier) getHEAP().get(refId);
            
                    // invoke native method
                    String result;
                    try {
                        result = ref.generatePassword(var1);
                    } catch (Throwable throwable) {
                        throwable.printStackTrace();
                        if (getEnableLog()) {
                            Log.d("Current HEAP: ", getHEAP().toString());
                        }
                        methodResult.error(throwable.getMessage(), null, null);
                        return;
                    }
            
                    // convert result to jsonable result
                    String jsonableResult = result;
            
                    resultList.add(jsonableResult);
                }
            
                methodResult.success(resultList);
            });
            // method
            put("com.iflytek.cloud.SpeakerVerifier::stopListening_batch", (argsBatch, methodResult) -> {
                List<String> resultList = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) argsBatch).size(); __i__++) {
                    Map<String, Object> args = ((List<Map<String, Object>>) argsBatch).get(__i__);
            
                    // args
            
            
                    // ref
                    int refId = (int) ((Map<String, Object>) args).get("refId");
                    com.iflytek.cloud.SpeakerVerifier ref = (com.iflytek.cloud.SpeakerVerifier) getHEAP().get(refId);
            
                    // invoke native method
                    try {
                        ref.stopListening();
                    } catch (Throwable throwable) {
                        throwable.printStackTrace();
                        if (getEnableLog()) {
                            Log.d("Current HEAP: ", getHEAP().toString());
                        }
                        methodResult.error(throwable.getMessage(), null, null);
                        return;
                    }
            
                    // convert result to jsonable result
                    String jsonableResult = "success";
            
                    resultList.add(jsonableResult);
                }
            
                methodResult.success(resultList);
            });
            // method
            put("com.iflytek.cloud.SpeakerVerifier::writeAudio_batch", (argsBatch, methodResult) -> {
                List<Integer> resultList = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) argsBatch).size(); __i__++) {
                    Map<String, Object> args = ((List<Map<String, Object>>) argsBatch).get(__i__);
            
                    // args
                    // jsonable arg
                    byte[] var1 = (byte[]) ((Map<String, Object>) args).get("var1");
                    // jsonable arg
                    int var2 = (int) ((Map<String, Object>) args).get("var2");
                    // jsonable arg
                    int var3 = (int) ((Map<String, Object>) args).get("var3");
            
                    // ref
                    int refId = (int) ((Map<String, Object>) args).get("refId");
                    com.iflytek.cloud.SpeakerVerifier ref = (com.iflytek.cloud.SpeakerVerifier) getHEAP().get(refId);
            
                    // invoke native method
                    int result;
                    try {
                        result = ref.writeAudio(var1, var2, var3);
                    } catch (Throwable throwable) {
                        throwable.printStackTrace();
                        if (getEnableLog()) {
                            Log.d("Current HEAP: ", getHEAP().toString());
                        }
                        methodResult.error(throwable.getMessage(), null, null);
                        return;
                    }
            
                    // convert result to jsonable result
                    int jsonableResult = result;
            
                    resultList.add(jsonableResult);
                }
            
                methodResult.success(resultList);
            });
            // method
            put("com.iflytek.cloud.SpeakerVerifier::isListening_batch", (argsBatch, methodResult) -> {
                List<Boolean> resultList = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) argsBatch).size(); __i__++) {
                    Map<String, Object> args = ((List<Map<String, Object>>) argsBatch).get(__i__);
            
                    // args
            
            
                    // ref
                    int refId = (int) ((Map<String, Object>) args).get("refId");
                    com.iflytek.cloud.SpeakerVerifier ref = (com.iflytek.cloud.SpeakerVerifier) getHEAP().get(refId);
            
                    // invoke native method
                    boolean result;
                    try {
                        result = ref.isListening();
                    } catch (Throwable throwable) {
                        throwable.printStackTrace();
                        if (getEnableLog()) {
                            Log.d("Current HEAP: ", getHEAP().toString());
                        }
                        methodResult.error(throwable.getMessage(), null, null);
                        return;
                    }
            
                    // convert result to jsonable result
                    boolean jsonableResult = result;
            
                    resultList.add(jsonableResult);
                }
            
                methodResult.success(resultList);
            });
            // method
            put("com.iflytek.cloud.SpeakerVerifier::cancel_batch", (argsBatch, methodResult) -> {
                List<String> resultList = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) argsBatch).size(); __i__++) {
                    Map<String, Object> args = ((List<Map<String, Object>>) argsBatch).get(__i__);
            
                    // args
            
            
                    // ref
                    int refId = (int) ((Map<String, Object>) args).get("refId");
                    com.iflytek.cloud.SpeakerVerifier ref = (com.iflytek.cloud.SpeakerVerifier) getHEAP().get(refId);
            
                    // invoke native method
                    try {
                        ref.cancel();
                    } catch (Throwable throwable) {
                        throwable.printStackTrace();
                        if (getEnableLog()) {
                            Log.d("Current HEAP: ", getHEAP().toString());
                        }
                        methodResult.error(throwable.getMessage(), null, null);
                        return;
                    }
            
                    // convert result to jsonable result
                    String jsonableResult = "success";
            
                    resultList.add(jsonableResult);
                }
            
                methodResult.success(resultList);
            });
            // method
            put("com.iflytek.cloud.SpeakerVerifier::setParameter_batch", (argsBatch, methodResult) -> {
                List<Boolean> resultList = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) argsBatch).size(); __i__++) {
                    Map<String, Object> args = ((List<Map<String, Object>>) argsBatch).get(__i__);
            
                    // args
                    // jsonable arg
                    String var1 = (String) ((Map<String, Object>) args).get("var1");
                    // jsonable arg
                    String var2 = (String) ((Map<String, Object>) args).get("var2");
            
                    // ref
                    int refId = (int) ((Map<String, Object>) args).get("refId");
                    com.iflytek.cloud.SpeakerVerifier ref = (com.iflytek.cloud.SpeakerVerifier) getHEAP().get(refId);
            
                    // invoke native method
                    boolean result;
                    try {
                        result = ref.setParameter(var1, var2);
                    } catch (Throwable throwable) {
                        throwable.printStackTrace();
                        if (getEnableLog()) {
                            Log.d("Current HEAP: ", getHEAP().toString());
                        }
                        methodResult.error(throwable.getMessage(), null, null);
                        return;
                    }
            
                    // convert result to jsonable result
                    boolean jsonableResult = result;
            
                    resultList.add(jsonableResult);
                }
            
                methodResult.success(resultList);
            });
        }};
    }
}
